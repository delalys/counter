{"version":3,"sources":["constants/ElementActionTypes.js","helpers.js","reducers/element.js","constants/AppSettingsActionTypes.js","reducers/appSettings.js","data/gradients.js","reducers/index.js","store.js","components/Element/ElementSettings.js","components/Element/Actions.js","assets/clic.mp3","components/Element/index.js","components/TopBar/AppSettings.js","components/TopBar/AddElementForm.js","components/TopBar/index.js","App.js","actions/appSettingsActions.js","actions/elementActions.js","reportWebVitals.js","index.js"],"names":["ADD_ELEMENT","DELETE_ELEMENT","DISPLAY_ELEMENT_SETTINGS","DISPLAY_ELEMENT_IN_FULL_SCREEN","RESET_ELEMENT_COUNT","RENAME_ELEMENT","CHANGE_ELEMENT_INCREMENT_BY","CHANGE_ELEMENT_COUNT","helpers","setStateElement","elements","indexElement","property","newValue","slice","initialState","id","value","count","gradient","color1","color2","elementSettingsIsDisplayed","elementIsInFullScreen","incrementBy","DISPLAY_APP_SETTINGS","MUTE_APP","CONDENSE_APP","COLORIZE_APP","appIsMute","appIsCondensed","gradients","appSettingsIsDisplayed","combineReducers","element","state","action","type","ElementActionTypes","propertyName","newElements","appSettings","AppSettingsActionTypes","indexGradient","enhancers","compose","window","__REDUX_DEVTOOLS_EXTENSION__","ElementSettings","handleNameChange","e","setState","target","handleChangeStateIncrementBy","parseInt","handleResetElementCount","props","resetElementCount","handleRenameElement","preventDefault","renameElement","handleChangeElementIncrementBy","newIncrementBy","oldIncrementBy","changeElementIncrementBy","isSettingsClass","this","className","onSubmit","index","handleDisplayElementSettings","onClick","handleElementFullScreen","deleteElement","placeholder","onChange","Component","Actions","pointerEvents","xmlns","data-name","viewBox","x","y","d","height","width","handleChangeElementCount","Element","isFullScreen","isClicked","top","left","position","zIndex","soundPlaying","React","createRef","elementSpaceAttribute","audio","setsWidth","testWidthContainer","document","querySelector","getBoundingClientRect","current","style","cssText","newState","displayElementSettings","changeType","load","play","changeElementCount","setTimeout","displayElementInFullScreen","bind","remove","mirrorElement","cloneNode","classList","add","insertAfter","i","Audio","ClicSound","preload","newNode","referenceNode","parentNode","insertBefore","nextSibling","isFullScreenClass","isCondensedClass","textSizeClass","onResize","ref","onMouseUp","onMouseDown","AppSettings","appIsMuteLabel","appIsCondensedLabel","muteApp","condenseApp","map","el","classActiveColor","colorizeApp","backgroundImage","AddElementForm","handleChange","handleAddElement","newElement","length","settingsOpen","addElement","displayAppSettings","version","TopBar","App","scrollToListTop","container","scrollIntoView","node","prefix","regx","RegExp","replace","appIsCondensedClass","isGradientClass","modifyIncrementBy","handleCondensing","modifyColor","connect","ownProps","dispatch","appSettingsActions","elementActions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.45398a49.chunk.js","sourcesContent":["export const ADD_ELEMENT = 'ADD_ELEMENT';\nexport const DELETE_ELEMENT = 'DELETE_ELEMENT';\nexport const DISPLAY_ELEMENT_SETTINGS = 'DISPLAY_ELEMENT_SETTINGS';\nexport const DISPLAY_ELEMENT_IN_FULL_SCREEN = 'DISPLAY_ELEMENT_IN_FULL_SCREEN';\nexport const RESET_ELEMENT_COUNT = 'RESET_ELEMENT_COUNT';\nexport const RENAME_ELEMENT = 'RENAME_ELEMENT';\nexport const CHANGE_ELEMENT_INCREMENT_BY = 'CHANGE_ELEMENT_INCREMENT_BY';\nexport const CHANGE_ELEMENT_COUNT = 'CHANGE_ELEMENT_COUNT';","//---------//\n// Helpers //\n//---------//\n\n\n// Eases value changes in an element, takes in: index (number) | property to change (string) | new value\n// export default function setStateElement(indexElement, property, newValue) {\n//     var newElements =   \n//       [...this.props.elements.elements.slice(0,indexElement), {\n//         ...this.props.elements.elements[indexElement], \n//           [property]: newValue,\n//       },\n//       ...this.props.elements.elements.slice(indexElement+1)]\n//   return newElements\n// }\n\nconst helpers = {\n    setStateElement: function(elements, indexElement, property, newValue) {\n        var newElements =   \n          [...elements.slice(0,indexElement), {\n            ...elements[indexElement], \n              [property]: newValue,\n          },\n          ...elements.slice(indexElement+1)]\n      return newElements\n    },\n\n}\n\n// setStateElement = (indexElement, property, newValue) =>  {\n//     return {\n//       ...this.props.elements, elements: [\n//         ...this.props.elements.elements.slice(0,indexElement),\n//         {\n//           ...this.props.elements.elements[indexElement],\n//           [property]: newValue,\n//         },\n//         ...this.props.elements.elements.slice(indexElement+1)\n//       ]\n//     }\n//   }\n\nexport default helpers;\n","import * as ElementActionTypes from '../constants/ElementActionTypes';\nimport helpers from './../helpers';\n\nconst initialState = {\n    elements: [\n      {\n        id: 1,\n        value: 'Glass of water',\n        count: 3,\n        gradient: 2,\n        color1: '#ba8f89',\n        color2: '#c6786c',\n        elementSettingsIsDisplayed: false,\n        elementIsInFullScreen: false,\n        incrementBy: 1,\n      },\n      {\n        id: 2,\n        value: 'Pushups',\n        count: 50,\n        gradient: 3,\n        color1: '#ba8f89',\n        color2: '#c6786c',\n        elementSettingsIsDisplayed: false,\n        elementIsInFullScreen: false,\n        incrementBy: 10,\n      },\n      {\n        id: 3,\n        value: 'Day without smoking',\n        count: 17,\n        gradient: 4,\n        color1: '#ba8f89',\n        color2: '#c6786c',\n        elementSettingsIsDisplayed: false,\n        elementIsInFullScreen: false,\n        incrementBy: 1,\n      }\n    ]\n}\n\n\nexport default function element(state = initialState, action) {\n\tswitch (action.type) {\n        case ElementActionTypes.ADD_ELEMENT:\n            return {\n                ...state, elements: [\n                    ...state.elements, action.element\n                ]\n            }\n        case ElementActionTypes.DELETE_ELEMENT:\n            return {\n                ...state, elements: [\n                    ...state.elements.slice(0, action.indexElement),\n                    ...state.elements.slice(action.indexElement + 1)\n                ]\n            }\n\t\tcase ElementActionTypes.DISPLAY_ELEMENT_SETTINGS:\n            return {\n                ...state, elements: (helpers.setStateElement([...state.elements], action.indexElement, action.propertyName, action.newValue)),\n            }\n        case ElementActionTypes.DISPLAY_ELEMENT_IN_FULL_SCREEN:\n            return {\n                ...state, elements: action.newElements,\n            }\n\t\tcase ElementActionTypes.RESET_ELEMENT_COUNT:\n            return {\n                ...state, elements: action.newElements\n            }\n        case ElementActionTypes.RENAME_ELEMENT:\n            return {\n                ...state, elements: (helpers.setStateElement([...state.elements], action.indexElement, action.propertyName, action.newValue)),\n            }\n        case ElementActionTypes.CHANGE_ELEMENT_INCREMENT_BY:\n            return {\n                ...state, elements: (helpers.setStateElement([...state.elements], action.indexElement, action.propertyName, action.newValue)),\n            }\n        case ElementActionTypes.CHANGE_ELEMENT_COUNT:\n            return {\n                ...state, elements: (helpers.setStateElement([...state.elements], action.indexElement, action.propertyName, action.newValue)),\n            }\n        default:\n            return state\n\t}\n}\n\n\n\n","export const DISPLAY_APP_SETTINGS = 'DISPLAY_APP_SETTINGS';\nexport const MUTE_APP = 'MUTE_APP';\nexport const CONDENSE_APP = 'CONDENSE_APP';\nexport const COLORIZE_APP = 'COLORIZE_APP';","import * as AppSettingsActionTypes from '../constants/AppSettingsActionTypes';\nimport gradients from '../data/gradients';\n\n\nconst initialState = {\n    appIsMute: false,\n    appIsCondensed: false,\n    gradients: gradients,\n    appSettingsIsDisplayed: false,\n    gradient: 3,\n}\n\nexport default function appSettings(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase AppSettingsActionTypes.DISPLAY_APP_SETTINGS:\n            return {\n                ...state, appSettingsIsDisplayed: !state.appSettingsIsDisplayed\n            }\n\t\tcase AppSettingsActionTypes.MUTE_APP:\n            return {\n                ...state, appIsMute: !state.appIsMute\n            }\n        case AppSettingsActionTypes.CONDENSE_APP:\n            return {\n                ...state, appIsCondensed: !state.appIsCondensed\n            }\n        case AppSettingsActionTypes.COLORIZE_APP:\n            return {\n                ...state, gradient: action.indexGradient,\n            }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","const gradients = [\n    {\n         color1: '#4d4d4d',\n         color2: '#2c2c2c',\n    },\n    {\n         color1: '#757EA1',\n         color2: '#456F7B',\n    },\n    {\n        color1: '#9ea2e0',\n        color2: '#5a60dd',\n    },\n    {\n         color1: '#B599DE',\n         color2: '#8951DB',\n    },\n    {\n        color1: '#9B7286',\n        color2: '#A65B7D',\n    },\n    {\n        color1: '#ba8f89',\n        color2: '#c6786c',\n    },\n    {\n        color1: '#C6AB6C',\n        color2: '#A58743',\n    },\n    {\n         color1: '#688D70',\n         color2: '#509264',\n    },\n]\nexport default gradients;","import { combineReducers } from 'redux'\n\nimport element from './element';\nimport appSettings from './appSettings';\n\nexport default combineReducers({\n\telement,\n\tappSettings,\n})\n","import {createStore, compose} from 'redux';\nimport rootReducer from './reducers';\n\nconst enhancers = compose(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default function configureStore(initialState) {\n  return createStore(rootReducer, initialState, enhancers);\n}","import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport helpers from '../../helpers';\n\nclass ElementSettings extends Component {\n    state = {\n        value: '',\n        incrementBy: '',\n    };\n\n    // State changes for Name input\n    handleNameChange = (e) => {\n        this.setState({ value: e.target.value});\n    }\n\n    // State changes for IncrementBy input\n    handleChangeStateIncrementBy = (e) => {\n        if (e.target.value !== '') {\n            this.setState({ incrementBy: parseInt(e.target.value)});\n        }\n    }\n\n\n    // Set the count back to 0\n    handleResetElementCount = (indexElement) =>\n    this.props.resetElementCount(helpers.setStateElement(this.props.elements, indexElement, 'count', 0));\n\n    // Change Element name\n    handleRenameElement = (e, newValue, indexElement) => {\n        e.preventDefault();\n        if (newValue !== '') {\n            this.props.renameElement(indexElement, 'value', newValue);\n        }\n    }\n\n    // Change Element IncrementBy\n    handleChangeElementIncrementBy = (newIncrementBy, indexElement, oldIncrementBy) => {\n        if ((newIncrementBy !== '') && (newIncrementBy !== '0')) {\n            this.props.changeElementIncrementBy(indexElement, 'incrementBy', newIncrementBy);\n        } else if ((newIncrementBy == null) || (newIncrementBy === '0')) {\n            this.props.changeElementIncrementBy(indexElement, 'incrementBy', oldIncrementBy);\n        }\n    }\n\n    render() {       \n        const isSettingsClass = this.props.elementSettingsIsDisplayed ? \"is-open\" : '';\n\n        return(\n            <div className={\"settings \" + isSettingsClass}>\n                <form\n                    className=\"modify-form\"\n                    onSubmit={(e) => {\n                        this.handleRenameElement(e, this.state.value, this.props.index)\n                        this.handleChangeElementIncrementBy(this.state.incrementBy, this.props.index, this.props.incrementBy)\n                        this.setState({ incrementBy: '' });\n                        this.setState({ value: '' });\n                        this.props.handleDisplayElementSettings(this.props.index);\n                    }}\n                >\n                    {/* Actions */}\n                    <div className=\"settings__item btn-actions\">\n                        <div\n                            className=\"btn btn-action\"\n                            onClick={() => this.handleResetElementCount(this.props.index)}\n                        >\n                            Reset to 0\n                        </div>\n                        <div\n                            className=\"btn btn-action\"\n                            onClick={() => this.props.handleElementFullScreen(this.props.index)}\n                        >\n                            Full screen\n                        </div>\n                        <div\n                            className=\"btn btn-action btn-danger\"\n                            onClick={() => this.props.deleteElement(this.props.index)}\n                        >\n                            Delete\n                        </div>\n                    </div>\n                    <hr/>\n                    {/* Name */}\n                    <div className=\"settings__item\">\n                        <span className=\"settings__title\">Name:</span>\n                            <input\n                                value={this.state.value}\n                                type=\"text\" \n                                placeholder=\"Enter a new name\"\n                                onChange={this.handleNameChange}\n                            />\n                    </div>\n                    {/* Increment by */}\n                    <div className=\"settings__item\">\n                        <span className=\"settings__title\">Step: <span className=\"settings__title--notice\">Now {this.props.incrementBy} by {this.props.incrementBy}</span></span>\n                            <input\n                                value={this.state.incrementBy}\n                                type=\"number\"\n                                placeholder=\"How much you want to add every count up ?\"\n                                onChange={this.handleChangeStateIncrementBy}\n                            />\n                    </div>\n                    <hr/>\n                    {/* Ok and Close */}\n                    <div className=\"settings__item\">\n                        <input\n                            value=\"Save and close\"\n                            className=\"btn btn-primary\"\n                            type=\"submit\"\n                        />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nElementSettings.propTypes = {\n    index: PropTypes.number.isRequired,\n    elements: PropTypes.array.isRequired,\n    elementSettingsIsDisplayed: PropTypes.bool.isRequired,\n    incrementBy: PropTypes.number.isRequired,\n\n\n    handleElementFullScreen: PropTypes.func.isRequired,\n    changeElementIncrementBy: PropTypes.func.isRequired,\n    resetElementCount: PropTypes.func.isRequired,\n    handleDisplayElementSettings: PropTypes.func.isRequired,\n    deleteElement: PropTypes.func.isRequired,\n    renameElement: PropTypes.func.isRequired,\n}\n\nexport default ElementSettings;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Actions = props => \n    <div className=\"element__actions\">\n        {/* toggle Full screen */}\n        <span \n            className=\"element__actions-btn hide-list-screen\" \n            onClick={() => props.handleElementFullScreen(props.index)} \n        >\n            <svg className=\"element__full-screen\"  pointerEvents=\"all\" xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"22 22 57 57\" x=\"0px\" y=\"0px\">\n                <g>\n                    <path className=\"path-1\" d=\"M70,42h8V30a8,8,0,0,0-8-8H58v8H70Z\"/>\n                    <path className=\"path-2\" d=\"M78,70V58H70V70H58v8H70A8,8,0,0,0,78,70Z\"/>\n                    <path className=\"path-3\" d=\"M30,78H42V70H30V58H22V70A8,8,0,0,0,30,78Z\"/>\n                    <path className=\"path-4\" d=\"M30,30H42V22H30a8,8,0,0,0-8,8V42h8Z\"/>\n                </g>\n            </svg>\n        </span>\n        {/* toggle Settings */}\n        <span\n            className=\"element__actions-btn hide-full-screen\"\n            onClick={() => props.handleDisplayElementSettings(props.index)}\n        >\n            <svg className=\"element__settings\" height=\"512pt\" viewBox=\"0 -21 512 512\" width=\"512pt\" xmlns=\"http://www.w3.org/2000/svg\">\n                \n                <path className=\"path-1\" d=\"m448 42.667969h-206.613281c9.28125 19.433593 14.613281 41.066406 14.613281 64 0 22.933593-5.332031 44.5625-14.613281 64h206.613281c17.152344 0 33.257812-6.636719 45.3125-18.6875 12.054688-12.054688 18.6875-28.160157 18.6875-45.3125 0-35.285157-28.714844-64-64-64zm0 0\"/>\n                <path className=\"path-2\" d=\"m213.332031 106.667969c0 58.910156-47.753906 106.664062-106.664062 106.664062-58.910157 0-106.667969-47.753906-106.667969-106.664062 0-58.910157 47.757812-106.667969 106.667969-106.667969 58.910156 0 106.664062 47.757812 106.664062 106.667969zm0 0\"/>\n                <path className=\"path-3\" d=\"m256 362.667969c0-22.933594 5.332031-44.566407 14.613281-64h-206.613281c-35.285156 0-64 28.714843-64 64 0 17.152343 6.632812 33.257812 18.6875 45.3125 12.054688 12.050781 28.160156 18.6875 45.3125 18.6875h206.613281c-9.28125-19.4375-14.613281-41.066407-14.613281-64zm0 0\"/>\n                <path className=\"path-4\" d=\"m512 362.667969c0 58.910156-47.757812 106.664062-106.667969 106.664062-58.910156 0-106.664062-47.753906-106.664062-106.664062 0-58.910157 47.753906-106.667969 106.664062-106.667969 58.910157 0 106.667969 47.757812 106.667969 106.667969zm0 0\"/>\n            </svg>\n        </span>\n        {/* Decrements */}\n        <span \n            className=\"element__actions-btn\" \n            onClick={() => props.handleChangeElementCount(props.index, 'decrement')}\n        >\n            <span className=\"element__button element__button--minus\">-</span>\n        </span>\n    </div>\n\n\nActions.propTypes = {\n    index: PropTypes.number.isRequired,\n    handleElementFullScreen: PropTypes.func.isRequired,\n    handleDisplayElementSettings: PropTypes.func.isRequired,\n    handleChangeElementCount: PropTypes.func.isRequired,\n}\n\nexport default Actions;","export default __webpack_public_path__ + \"static/media/clic.92f35524.mp3\";","import React, {Component, Fragment} from 'react';\nimport ElementSettings from './ElementSettings';\nimport Actions from './Actions';\nimport PropTypes from 'prop-types';\nimport ResizeObserver from 'rc-resize-observer';\nimport helpers from '../../helpers';\nimport ClicSound from '../../assets/clic.mp3'\n\n\nclass Element extends Component {\n    \n    state = {\n        isFullScreen: false,\n        elementSettingsIsDisplayed: false,\n        isClicked: false,\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        position: 'relative',\n        zIndex: 3,\n        soundPlaying: 0,\n    }\n    \n    element = React.createRef();\n    elementSpaceAttribute = '';\n    audio = [];\n    \n    componentDidMount() {\n        this.setsWidth();\n        this.elementSpaceAttribute = this.element.current.getBoundingClientRect();\n\n        // Create and preload 10 sounds for mobile delay\n        for (let i = 0; i < 10; i++) {\n            this.audio = [\n            ...this.audio,\n            new Audio (ClicSound)\n            ]\n            this.audio[i].preload = 'auto';\n        }\n    }\n\n    setsWidth = () => {\n        let testWidthContainer = document.querySelector('.element__container').getBoundingClientRect()\n        this.setState({width: testWidthContainer.width});\n        this.element.current.style.cssText = \"width: \" + this.state.width + \"px;\";\n    }\n\n    // Place DOM element in after reference Dom element\n    insertAfter(newNode, referenceNode) {\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n    }  \n\n    // Change Element settingsOpen\n    handleDisplayElementSettings = (indexElement) => {\n        // Toggle settingsOpen boolean\n        let newState = !this.props.elements[indexElement].elementSettingsIsDisplayed;\n        // Updates store with helper\n        this.props.displayElementSettings(indexElement, 'elementSettingsIsDisplayed', newState);\n    }\n\n    handleChangeElementCount = (indexElement, changeType) => {\n        // Play sound\n        if (!this.props.appIsMute) {\n          this.audio[this.state.soundPlaying].load();\n          this.audio[this.state.soundPlaying].play()\n        }\n        this.setState({\n          soundPlaying: (this.state.soundPlaying +1) % 10\n        })\n    \n        // Check if resuslt is a positive number, otherwise sets it to 1\n        let incrementBy = this.props.elements[indexElement].incrementBy;\n        if ((incrementBy === 0) || (incrementBy === '')) {\n          incrementBy = parseInt(1);\n        }\n        // Increment or decrement by the new value\n        parseInt(incrementBy);\n        if (changeType === \"increment\") {\n          let newState = this.props.elements[indexElement].count +=  incrementBy;\n          this.props.changeElementCount(indexElement, 'count', newState);\n        } else if (changeType === \"decrement\") {\n            let newState = this.props.elements[indexElement].count -=  incrementBy\n            this.props.changeElementCount(indexElement, 'count', newState);\n        }\n      }\n\n    handleElementFullScreen = (indexElement) => {\n\n        // CLOSING\n        if (this.props.elements[indexElement].elementIsInFullScreen) {\n            \n            // Sets back original positionning\n            // Get valeu from state\n            this.element.current.style.cssText = \n                \"width: \" + this.elementSpaceAttribute.width + \"px;\"+\n                \"height: \" + this.elementSpaceAttribute.height + \"px;\"+\n                \"left: \" + this.elementSpaceAttribute.x + \"px;\"+\n                \"top: \" + this.elementSpaceAttribute.y + \"px;\"+\n                \"position: fixed;\" + \n                \"z-index: 99;\";\n              \n            this.setState({ \n                    width: this.elementSpaceAttribute.width,\n                    height: this.elementSpaceAttribute.height,\n                    top: this.elementSpaceAttribute.y,\n                    left: this.elementSpaceAttribute.x,\n                    position: \"fixed\",\n                    zIndex: \"99\",\n                }, () => {\n                    this.element.current.style.cssText = \n                        \"width: \" + this.state.width + \"px;\"+\n                        \"height: \" + this.state.height + \"px;\"+\n                        \"left: \" + this.state.left + \"px;\"+\n                        \"top: \" + this.state.top + \"px;\"+\n                        \"position:\"+ this.state.position +\";\"+\n                        \"z-index:\"+ this.state.zIndex;\n                }\n            )\n            \n            // Toggle Open state and class\n            setTimeout(function(){ \n                let newState = ! this.props.elements[indexElement].elementIsInFullScreen;\n                this.props.displayElementInFullScreen(helpers.setStateElement(this.props.elements, indexElement, 'elementIsInFullScreen', newState));\n            }.bind(this), 0);\n            \n            // Fixes once animation is done and Removes mirror element\n            setTimeout(function(){ \n                this.setState({ \n                    width: this.elementSpaceAttribute.width,\n                    height: this.elementSpaceAttribute.height,\n                    top: '',\n                    left: '',\n                    position: \"relative\",\n                    zIndex: '',\n                }, () => {\n                    this.element.current.style.cssText = \n                        \"width: \" + this.state.width + \"px;\"+\n                        \"height: \" + this.state.height + \"px\"+\n                        \"left: \" + this.state.left + \";\"+\n                        \"top: \" + this.state.top + \";\"+\n                        \"position:\"+ this.state.zIndex +\";\";\n                }\n            )\n            // Remove copy in DOM\n            document.querySelector('.mirror-element').remove();\n\n            }.bind(this), 300);\n        }\n\n        // OPENING\n        else {\n            this.elementSpaceAttribute = this.element.current.getBoundingClientRect();\n\n            // Create copy in dom\n            let mirrorElement = this.element.current.cloneNode(true);\n            mirrorElement.style.cssText = \"visibility: hidden\";\n            mirrorElement.classList.add(\"mirror-element\");\n            this.insertAfter(mirrorElement, this.element.current);\n            \n            // Sets in fixed position\n            this.setState({\n                    width: this.elementSpaceAttribute.width,\n                    height: this.elementSpaceAttribute.height,\n                    top: this.elementSpaceAttribute.y,\n                    left: this.elementSpaceAttribute.x,\n                    position: \"fixed\",\n                }, () => {\n                    this.element.current.style.cssText = \n                        \"width: \" + this.state.width + \"px;\"+\n                        \"height: \" + this.state.height + \"px;\"+\n                        \"left: \" + this.state.left + \"px;\"+\n                        \"top: \" + this.state.top + \"px;\"+\n                        \"position:\"+ this.state.position +\";\";\n                }\n            )\n\n            // Toggle Open state and class\n            setTimeout(function(){ \n                let newState = ! this.props.elements[indexElement].elementIsInFullScreen;\n                this.props.displayElementInFullScreen(helpers.setStateElement(this.props.elements, indexElement, 'elementIsInFullScreen', newState));\n            }.bind(this), 0);\n        }\n    }\n\n    render() {\n        \n        const {\n            index,\n            elements,\n            count,\n            value,\n            incrementBy,\n            elementSettingsIsDisplayed,\n\n            resetElementCount,\n            renameElement,\n            changeElementIncrementBy,\n            deleteElement,\n        } = this.props;\n\n        const isFullScreenClass = this.props.elements[index].elementIsInFullScreen ? \"is-open\" : '';\n\n        const isCondensedClass = this.props.appIsCondensed ? \"is-condensed\" : '';\n        \n        const isClicked = this.state.isClicked ? \"is-clicked\" : '';\n\n        let textSizeClass = (this.props.count > 9999) ? \"reduced-text-1\" : '';\n\n        return(\n            <ResizeObserver onResize={() => this.setsWidth()}>\n                <Fragment>\n                    {/* Settings */}\n                    <ElementSettings \n                        key={index}\n\n                        index={index}\n                        elements={elements}\n                        incrementBy={incrementBy}\n                        elementSettingsIsDisplayed={elementSettingsIsDisplayed}\n                        \n                        resetElementCount={resetElementCount}\n                        renameElement={renameElement}\n                        changeElementIncrementBy={changeElementIncrementBy}\n                        deleteElement={deleteElement}\n                        handleDisplayElementSettings={this.handleDisplayElementSettings}\n                        handleElementFullScreen={this.handleElementFullScreen}\n                    />\n                    \n                    {/* ELEMENT */}\n                    <div \n                        className={isFullScreenClass + \" \" + isCondensedClass + \" element justify-content-center d-flex animate__animated animate__fadeInDown\"} \n                        ref={this.element}\n                    >\n                        <span className=\"element__bg\"></span>\n\n                        {/* Actions button */}\n                        <Actions\n                            index={index}\n\n                            handleDisplayElementSettings={this.handleDisplayElementSettings}\n                            handleChangeElementCount={this.handleChangeElementCount}\n                            handleElementFullScreen={this.handleElementFullScreen}\n                        />\n                        \n                        {/* Title */}\n                        <h6 className=\"element__title\">\n                            {value}\n                            <span className=\"element__title--notice\"> (+{incrementBy})</span>\n                        </h6>\n                        \n                        {/* Count */}\n                        <span className={isClicked + \" \" + textSizeClass + \" element__count\"}>{count}</span>\n\n                        {/* Increments */}\n                        <span \n                            className=\"element__button element__button--plus\"\n                            onClick={() => this.handleChangeElementCount(index, 'increment') }\n                            onMouseUp={(e) => this.setState({isClicked: false})}\n                            onMouseDown={(e) => this.setState({isClicked: true})}\n                        >+</span>\n                    </div>\n                </Fragment>\n            </ResizeObserver>\n        );\n    }\n}\n\nElement.propTypes = {     \n    index: PropTypes.number.isRequired,\n    elements: PropTypes.array.isRequired,\n    count: PropTypes.number.isRequired,\n    value: PropTypes.string.isRequired,\n    incrementBy: PropTypes.number.isRequired,\n    elementSettingsIsDisplayed: PropTypes.bool.isRequired,\n\n    resetElementCount: PropTypes.func.isRequired,\n    renameElement: PropTypes.func.isRequired,\n    changeElementIncrementBy: PropTypes.func.isRequired,\n    deleteElement: PropTypes.func.isRequired,\n    displayElementSettings: PropTypes.func.isRequired,\n    displayElementInFullScreen: PropTypes.func.isRequired,\n}\n\nexport default Element;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AppSettings extends Component {\n\n    render() {\n\n        const isSettingsClass = this.props.appSettingsIsDisplayed ? \"is-open\" : '';\n        const appIsMuteLabel = this.props.appIsMute ? \"Unmute app\" : 'Mute app';\n        const appIsCondensedLabel = this.props.appIsCondensed ? \"Large view\" : 'Compact view';\n\n        return(\n            <div className={\"settings is-app \" + isSettingsClass}>\n                <div className=\"row\">\n                    <hr className=\"\"/>\n\n                    {/* Actions */}\n                    <div className=\"settings__item btn-actions col-lg-5\">\n                        <div\n                            className=\"btn btn-action\"\n                            onClick={() => this.props.muteApp()}\n                        >\n                            {appIsMuteLabel}\n                        </div>\n                        <div\n                            className=\"btn btn-action\"\n                            onClick={() => this.props.condenseApp()}\n                        >\n                            {appIsCondensedLabel}\n                        </div>\n                    </div>\n                    <hr className=\"d-lg-none d-xl-none\"/>\n                    {/* Color */}\n                    <div className=\"settings__item col-lg-7\">\n                        <span className=\"settings__title\">Color:</span>\n                        {this.props.gradients.map((el, index) => {\n                            let color1 = this.props.gradients[index].color1;\n                            let color2 = this.props.gradients[index].color2;\n                            let classActiveColor = (index === this.props.gradient) ? 'color-example active' : 'color-example';\n                            return <span \n                                        className={classActiveColor}\n                                        key={index}\n                                        onClick={ () => this.props.colorizeApp(index)}\n                                    >\n                                        <div \n                                            className=\"color-example__background\"\n                                            style={{backgroundImage: `linear-gradient(190deg, ${color1} 0%, ${color2} 100%)`}}\n                                        ></div>\n                                    </span>\n                            })}\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nAppSettings.propTypes = {\n    appSettingsIsDisplayed: PropTypes.bool.isRequired,\n    \n    appIsMute: PropTypes.bool.isRequired,\n    muteApp: PropTypes.func.isRequired,\n\n    appIsCondensed: PropTypes.bool.isRequired,\n    condenseApp: PropTypes.func.isRequired,\n\n    colorizeApp: PropTypes.func.isRequired,\n\n    gradient: PropTypes.number.isRequired,\n    gradients: PropTypes.array.isRequired,\n}\n\nexport default AppSettings;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddElementForm extends Component {\n\n    state = {\n        value: '',\n    };\n\n    handleChange = (e) => {\n        this.setState({ value: e.target.value});\n    }\n\n    handleAddElement = (e) => {\n        e.preventDefault();\n        \n        // Create a new element\n        const newElement = {\n            value: this.state.value,\n            count: 0,\n            id: this.props.elements.length + 1,\n            settingsOpen: false,\n            incrementBy: 1,\n        }\n\n        // Add a new element to app state\n        this.props.addElement(newElement);\n        \n        // Clear input\n        this.setState({ value: '' });\n    }\n\n    render() {\n\n        return(\n            <form className=\"d-flex\" onSubmit={this.handleAddElement}>\n                <span \n                    className=\"form-element__left-action\"\n                    onClick={() => this.props.displayAppSettings()}\n                >\n                    <svg version=\"1.1\" viewBox=\"0 0 585.28 585.28\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"m538 227.83h-20.963c-5.225 0-13.502-6.353-17.029-15.471-1.242-3.213-2.576-6.432-3.963-9.569-3.953-8.938-2.596-19.278 1.096-22.962l14.838-14.819c18.441-18.443 18.441-48.443 6e-3 -66.879l-24.783-24.783c-8.951-8.951-20.83-13.877-33.455-13.877s-24.504 4.927-33.451 13.877l-14.822 14.822c-2.158 2.157-6.531 3.498-11.414 3.498-3.957 0-8.064-0.851-11.564-2.399-3.139-1.386-6.352-2.717-9.553-3.957-9.123-3.528-15.479-11.809-15.479-17.032v-20.983c-1e-3 -26.074-21.216-47.292-47.29-47.292h-35.049c-26.077 0-47.289 21.215-47.289 47.292v20.982c0 5.223-6.356 13.5-15.475 17.029-3.191 1.233-6.405 2.564-9.553 3.954-3.5 1.548-7.613 2.399-11.573 2.399-4.883 0-9.259-1.34-11.417-3.495l-14.829-14.823c-8.938-8.938-20.82-13.865-33.452-13.865s-24.504 4.927-33.431 13.877l-24.77 24.772c-18.437 18.437-18.437 48.437 0 66.873l14.823 14.823c3.69 3.69 5.052 14.039 1.102 22.987-1.383 3.136-2.714 6.349-3.951 9.553-3.525 9.116-11.805 15.468-17.035 15.468h-20.976c-26.077 0-47.289 21.215-47.289 47.292v35.049c0 26.074 21.215 47.289 47.289 47.289h20.973c5.227 0 13.51 6.352 17.032 15.469 1.236 3.201 2.567 6.414 3.95 9.549 3.951 8.949 2.589 19.297-1.102 22.988l-14.823 14.822c-18.437 18.434-18.437 48.449-6e-3 66.9l24.786 24.789c8.935 8.932 20.808 13.854 33.437 13.854 12.628 0 24.501-4.918 33.437-13.854l14.832-14.842c2.188-2.189 6.454-3.496 11.408-3.496 3.957 0 8.063 0.85 11.567 2.398 3.109 1.377 6.328 2.711 9.562 3.963 9.122 3.527 15.475 11.805 15.475 17.029v20.963c0 26.074 21.215 47.293 47.289 47.293h35.05c26.076 0 47.289-21.215 47.289-47.293v-20.963c0-5.225 6.352-13.502 15.467-17.023 3.201-1.236 6.414-2.566 9.551-3.953 3.5-1.545 7.607-2.396 11.564-2.396 4.889 0 9.266 1.34 11.422 3.498l14.822 14.822c8.961 8.936 20.842 13.854 33.469 13.854 1.367 0 2.75-0.062 4.111-0.182 17.268-1.5 32.502-16.805 40.686-25.027l1.035-1.037 12.391-12.391c18.404-18.451 18.404-48.455 8e-3 -66.895l-14.832-14.832c-3.689-3.689-5.051-14.039-1.102-22.99 1.391-3.145 2.719-6.357 3.951-9.549 3.525-9.117 11.803-15.469 17.025-15.469h20.965c26.078 0 47.289-21.215 47.289-47.293v-35.045c0.012-26.076-21.203-47.291-47.277-47.291zm-117.39 64.817c0 70.559-57.402 127.96-127.96 127.96-70.558 0-127.96-57.402-127.96-127.96 0-70.557 57.403-127.96 127.96-127.96 70.557-1e-3 127.96 57.401 127.96 127.96z\"/>\n                    </svg>\n                </span>\n                <input\n                    className=\"form-element__input\" \n                    value={this.state.value}\n                    type=\"text\" \n                    placeholder=\"Enter a new name\"\n                    onChange={this.handleChange}\n                    ></input>\n                <input\n                    type=\"submit\" \n                    className=\"form-element__btn btn btn-primary\"\n                    value=\"Add\"\n                    />\n                <span className=\"bg-btn\"></span>\n            </form>\n        )\n    }\n}\n\nAddElementForm.propTypes = {  \n    elements: PropTypes.array.isRequired,\n    \n    addElement: PropTypes.func.isRequired,\n    \n    displayAppSettings: PropTypes.func.isRequired,\n}\n\nexport default AddElementForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AppSettings from './AppSettings';\nimport AddElementForm from './AddElementForm';\n\nclass TopBar extends Component {\n\n    \n    render() {\n        const isSettingsClass = this.props.appSettingsIsDisplayed ? \"is-open\" : '';\n\n        return(\n            <div className={\"form-element mt-3 \" + isSettingsClass}>\n                <AddElementForm\n                    elements={this.props.elements}\n                    addElement={this.props.addElement}\n\n                    displayAppSettings={this.props.displayAppSettings}\n                />\n                <AppSettings \n                    appSettingsIsDisplayed={this.props.appSettingsIsDisplayed}\n\n                    appIsMute={this.props.appIsMute}\n                    muteApp={this.props.muteApp}\n\n                    appIsCondensed={this.props.appIsCondensed}\n                    condenseApp={this.props.condenseApp}\n\n                    colorizeApp={this.props.colorizeApp}\n\n                    gradient={this.props.gradient}\n                    gradients={this.props.gradients}\n                />\n            </div>\n        )\n    }\n}\n\nTopBar.propTypes = {\n    appSettingsIsDisplayed: PropTypes.bool.isRequired,\n    \n    appIsMute: PropTypes.bool.isRequired,\n    muteApp: PropTypes.func.isRequired,\n\n    appIsCondensed: PropTypes.bool.isRequired,\n    condenseApp: PropTypes.func.isRequired,\n\n    colorizeApp: PropTypes.func.isRequired,\n\n    gradient: PropTypes.number.isRequired,\n    gradients: PropTypes.array.isRequired,\n    \n    elements: PropTypes.array.isRequired,\n    addElement: PropTypes.func.isRequired,\n    \n    displayAppSettings: PropTypes.func.isRequired,\n}\n\nexport default TopBar;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as elementActions from './actions/elementActions';\nimport * as appSettingsActions from './actions/appSettingsActions';\nimport Element from './components/Element';\nimport Topbar from './components/TopBar';\nimport './App.css';\n\n// import ClicSound from './assets/clic.mp3'\n\nclass App extends Component {\n\n//   audio = [];\n  \n  // componentDidMount() {\n  //   // Create and preload 10 sounds for mobile delay\n  //   for (let i = 0; i < 10; i++) {\n  //     this.audio = [\n  //       ...this.audio,\n  //       new Audio (ClicSound)\n  //     ]\n  //     this.audio[i].preload = 'auto';\n  //   }\n  //   this.props.colorizeApp(3)\n  // }\n  \n  //-----//\n  // App //\n  //-----//\n\n  // handleMuting = () => {\n  //   this.setState({\n  //     isMute: !this.state.isMute\n  //   })\n  // }\n\n  // handleCondensing = () => {\n  //   this.setState({\n  //     isCondensed: !this.state.isCondensed\n  //   })\n  // }\n\n  // Change Element gradient\n  // modifyColor = (indexGradient) =>{\n  //   this.setState({gradient: indexGradient});\n  // }\n\n  \n  //------//\n  // FORM //\n  //------//\n\n  // Change Element settingsOpen\n  // toggleAppSettings = () => {\n  //   // Toggle settingsOpen boolean\n  //   this.setState({appSettingsOpen: !this.state.appSettingsOpen});\n  // }\n\n  // // Add new element\n  // handleAddElement = (el) => {\n  //   this.setState( prevstate => {\n  //     return{\n  //       elements: [\n  //         ...prevstate.elements,\n  //         el\n  //       ]\n  //     }\n  //   });\n  // }\n\n\n\n  \n\n\n  // Used for condensed class on container\n  removeClassByPrefix(node, prefix) {\n    var regx = new RegExp('\\\\b' + prefix + '[^ ]*[ ]?\\\\b', 'g');\n    node.className = node.className.replace(regx, '');\n    return node;\n  }\n  \n  \n  //---------//\n  // ELEMENT //  \n  //---------//\n\n  // handleCountChange = (indexElement, changeType) => {\n  //   // Play sound\n  //   if (!this.props.appSettings.isMute) {\n  //     this.audio[this.props.appSettings.soundPlaying].load();\n  //     this.audio[this.props.appSettings.soundPlaying].play()\n  //   }\n  //   this.setState({\n  //     soundPlaying: (this.props.appSettings.soundPlaying +1) % 10\n  //   })\n\n  //   // Check if resuslt is a positive number, otherwise sets it to 1\n  //   let incrementBy = this.props.state.state.elements[indexElement].incrementBy;\n  //   if ((incrementBy === 0) || (incrementBy === '')) {\n  //     incrementBy = parseInt(1);\n  //   }\n  //   // Increment or decrement by the new value\n  //   if (changeType === \"increment\") {\n  //     parseInt(incrementBy);\n  //     this.setState( prevState => ({\n  //       count: prevState.elements[indexElement].count +=  incrementBy\n  //     }));\n  //   } else if (changeType === \"decrement\") {\n  //     this.setState( prevState => ({\n  //       count: prevState.elements[indexElement].count -=  incrementBy\n  //     }));\n  //   }\n  // }\n\n  //------------------//\n  // ELEMENT SETTINGS //  \n  //------------------//\n\n  // Delete element\n  // handleRemoveElement = (index) => {\n  //   let elements = this.state.elements;\n  //   elements.splice(index, 1);\n  //   this.setState({elements});\n  // }\n\n  // Set the count back to 0\n  // handleReinitElement = (indexElement) =>\n  //   this.setStateElement(indexElement, 'count', 0);  \n\n  // Change Element name\n  // modifyName = (event, newValue, indexElement) => {\n  //   event.preventDefault();\n  //   if (newValue !== '') {\n  //     this.setStateElement(indexElement, 'value', newValue);\n  //   }\n  // }\n\n  // Change Element IncrementBy\n  // modifyIncrementBy = (newIncrementBy, indexElement, oldIncrementBy) => {\n  //   if ((newIncrementBy !== '') && (newIncrementBy !== '0')) {\n  //     this.setStateElement(indexElement, 'incrementBy', newIncrementBy);\n  //   } else if ((newIncrementBy == null) || (newIncrementBy === '0')) {\n  //     this.setStateElement(indexElement, 'incrementBy', oldIncrementBy);\n  //   }\n  // }\n\n\n  scrollToListTop = () => this.container.current.scrollIntoView();\n  \n  container = React.createRef();\n\n  \n  render(){\n    \n    const appIsCondensedClass = this.props.appSettings.appIsCondensed ? \"is-condensed\" : '';\n    const isGradientClass = \"gradient-\" + this.props.appSettings.gradient;   \n\n    return (\n      <div className={appIsCondensedClass + \" \" + isGradientClass +\" background-gradient\"}>\n          <div className=\"container\">\n              <div \n                className=\"element__container\"\n              >\n                {this.props.elements.elements.map( (element, index) =>\n                  <Element \n                    key={index}\n                    id={element.id}\n                    index={index}\n                    elements={this.props.elements.elements}\n                    value={element.value}\n                    renameElement={this.props.renameElement}\n                    count={element.count}\n                    changeElementCount={this.props.changeElementCount}\n                    incrementBy={element.incrementBy}\n                    modifyIncrementBy={this.modifyIncrementBy}\n                    appIsMute={this.props.appSettings.appIsMute}\n                    soundPlaying={this.props.appSettings.soundPlaying}\n                    appIsCondensed={this.props.appSettings.appIsCondensed}\n                    handleCondensing={this.handleCondensing}\n                    elementSettingsIsDisplayed={element.elementSettingsIsDisplayed}\n                    displayElementSettings={this.props.displayElementSettings}\n                    changeElementIncrementBy={this.props.changeElementIncrementBy}\n                    modifyColor={this.modifyColor}\n                    resetElementCount={this.props.resetElementCount}\n                    displayElementInFullScreen={this.props.displayElementInFullScreen}\n                    deleteElement={this.props.deleteElement}\n                  />\n                )}\n                <div \n                  ref={this.container} \n                  className=\"anchor\"\n                ></div>\n              </div>\n              <div className=\"element__container element__container--form\">\n                <Topbar \n                  elements={this.props.elements.elements}\n                  gradients={this.props.appSettings.gradients}\n                  gradient={this.props.appSettings.gradient}\n\n                  appSettingsIsDisplayed={this.props.appSettings.appSettingsIsDisplayed}\n                  displayAppSettings={this.props.displayAppSettings}\n\n                  appIsCondensed={this.props.appSettings.appIsCondensed}\n                  condenseApp={this.props.condenseApp}\n\n                  appIsMute={this.props.appSettings.appIsMute}\n                  muteApp={this.props.muteApp}\n\n                  addElement={this.props.addElement}\n\n                  colorizeApp={this.props.colorizeApp}\n                />\n              </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  appSettings: state.appSettings,\n  elements: state.element\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    displayAppSettings: () => dispatch(appSettingsActions.displayAppSettings()),\n    muteApp: () => dispatch(appSettingsActions.muteApp()),\n    condenseApp: () => dispatch(appSettingsActions.condenseApp()),\n    colorizeApp: (indexGradient) => dispatch(appSettingsActions.colorizeApp(indexGradient)),\n    \n    addElement: (element) => dispatch(elementActions.addElement(element)),\n    deleteElement: (indexElement) => dispatch(elementActions.deleteElement(indexElement)),\n    displayElementSettings: (indexElement, propertyName, newValue) => dispatch(elementActions.displayElementSettings(indexElement, propertyName, newValue)),\n    displayElementInFullScreen: (newElements) => dispatch(elementActions.displayElementInFullScreen(newElements)),\n    resetElementCount: (newElements) => dispatch(elementActions.resetElementCount(newElements)),\n    renameElement: (indexElement, propertyName, newValue) => dispatch(elementActions.renameElement(indexElement, propertyName, newValue)),\n    changeElementIncrementBy: (indexElement, propertyName, newValue) => dispatch(elementActions.changeElementIncrementBy(indexElement, propertyName, newValue)),\n    changeElementCount: (indexElement, propertyName, newValue) => dispatch(elementActions.changeElementCount(indexElement, propertyName, newValue)),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import * as AppSettingsActionTypes from '../constants/AppSettingsActionTypes';\n\nexport const displayAppSettings = () => {\n    return {\n        type: AppSettingsActionTypes.DISPLAY_APP_SETTINGS,\n    }\n}\n\nexport const muteApp = () => {\n    return {\n        type: AppSettingsActionTypes.MUTE_APP,\n    }\n}\n\nexport const condenseApp = () => {\n    return {\n        type: AppSettingsActionTypes.CONDENSE_APP,\n    }\n}\n\nexport const colorizeApp = (indexGradient) => {\n    return {\n        type: AppSettingsActionTypes.COLORIZE_APP,\n        indexGradient,\n    }\n}","import * as ElementActionTypes from '../constants/ElementActionTypes';\n\nexport const addElement = (element) => {\n    return {\n        type: ElementActionTypes.ADD_ELEMENT,\n        element,\n    }\n}\n\nexport const deleteElement = (indexElement) => {\n    return {\n        type: ElementActionTypes.DELETE_ELEMENT,\n        indexElement,\n    }\n}\n\nexport const displayElementSettings = (indexElement, propertyName, newValue) => {\n    return {\n        type: ElementActionTypes.DISPLAY_ELEMENT_SETTINGS,\n        indexElement, \n        propertyName, \n        newValue\n    }\n}\n\nexport const displayElementInFullScreen = (newElements) => {\n    return {\n        type: ElementActionTypes.DISPLAY_ELEMENT_IN_FULL_SCREEN,\n        newElements\n    }\n}\n\nexport const resetElementCount = (newElements) => {\n    return {\n        type: ElementActionTypes.RESET_ELEMENT_COUNT,\n        newElements\n    }\n}\n\nexport const renameElement = (indexElement, propertyName, newValue) => {\n    return {\n        type: ElementActionTypes.RENAME_ELEMENT,\n        indexElement,\n        propertyName, \n        newValue\n    }\n}\n\nexport const changeElementIncrementBy = (indexElement, propertyName, newValue) => {\n    return {\n        type: ElementActionTypes.CHANGE_ELEMENT_INCREMENT_BY,\n        indexElement,\n        propertyName, \n        newValue\n    }\n}\n\nexport const changeElementCount = (indexElement, propertyName, newValue) => {\n    return {\n        type: ElementActionTypes.CHANGE_ELEMENT_COUNT,\n        indexElement,\n        propertyName, \n        newValue\n    }\n}\n\n// increments\n\n// full screen\n\n// delete\n\n// rename\n\n// Increment by","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport './scss/app.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App /> \n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}