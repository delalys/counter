{"version":3,"sources":["constants/ElementActionTypes.js","helpers.js","reducers/element.js","constants/AppSettingsActionTypes.js","reducers/appSettings.js","data/gradients.js","reducers/index.js","store.js","components/Element/ElementSettings.js","components/Element/Actions.js","assets/clic.mp3","components/Element/index.js","components/TopBar/AppSettings.js","components/TopBar/AddElementForm.js","components/TopBar/index.js","App.js","actions/appSettingsActions.js","actions/elementActions.js","reportWebVitals.js","index.js"],"names":["ADD_ELEMENT","DELETE_ELEMENT","DISPLAY_ELEMENT_SETTINGS","DISPLAY_ELEMENT_IN_FULL_SCREEN","RESET_ELEMENT_COUNT","RENAME_ELEMENT","CHANGE_ELEMENT_INCREMENT_BY","CHANGE_ELEMENT_COUNT","CHANGE_ELEMENT_COUNT_HISTORY","helpers","setStateElement","elements","indexElement","property","newValue","addToList","undefined","newElements","slice","push","pop","initialState","id","value","count","gradient","color1","color2","elementSettingsIsDisplayed","elementIsInFullScreen","incrementBy","countHistory","DISPLAY_APP_SETTINGS","MUTE_APP","CONDENSE_APP","COLORIZE_APP","appIsMute","appIsCondensed","gradients","appSettingsIsDisplayed","combineReducers","element","state","action","type","ElementActionTypes","propertyName","console","log","appSettings","AppSettingsActionTypes","indexGradient","enhancers","compose","window","__REDUX_DEVTOOLS_EXTENSION__","ElementSettings","handleNameChange","e","setState","target","handleChangeStateIncrementBy","parseInt","handleResetElementCount","props","resetElementCount","handleRenameElement","preventDefault","renameElement","handleChangeElementIncrementBy","newIncrementBy","oldIncrementBy","changeElementIncrementBy","handleTimePlanning","this","isSettingsClass","dayjs","calendar","isYesterday","className","style","height","settingsHeight","onSubmit","index","handleDisplayElementSettings","onClick","handleElementFullScreen","deleteElement","placeholder","onChange","viewBox","width","xmlns","d","Component","Actions","pointerEvents","data-name","x","y","handleChangeElementCount","Element","isFullScreen","isClicked","top","left","position","zIndex","soundPlaying","elementSettingsHeight","elementSettingsHeightCondensed","React","createRef","elementSpaceAttribute","audio","setsWidth","widthContainer","document","querySelector","getBoundingClientRect","current","cssText","createMirrorElement","remove","mirrorElement","cloneNode","appendChild","classList","add","setsElementSettingsHeight","elementSettingsDOM","appDOM","offsetHeight","newState","displayElementSettings","changeType","load","play","changeElementCount","setTimeout","displayElementInFullScreen","bind","insertAfter","handleUpdateHistoryCount","dateNow","Date","now","newDateObject","toLocaleString","timeZone","changeElementCountHistory","i","Audio","ClicSound","preload","Promise","mirrorIsDone","then","newNode","referenceNode","parentNode","insertBefore","nextSibling","isFullScreenClass","isCondensedClass","textSizeClass","elementSettingsHeightToGve","onResize","ref","onMouseUp","onMouseDown","AppSettings","isOpenSettingsClass","appIsMuteLabel","appIsCondensedLabel","appSettingsHeight","muteApp","condenseApp","map","el","classActiveColor","colorizeApp","backgroundImage","AddElementForm","handleChange","handleAddElement","newElement","length","settingsOpen","addElement","displayAppSettings","version","TopBar","appSettingsHeightCondensed","setsAppSettingsHeight","appSettingsHeightDOM","appAettingsHeightToGve","App","scrollToListTop","container","scrollIntoView","appIsCondensedClass","isGradientClass","modifyIncrementBy","handleCondensing","modifyColor","connect","ownProps","dispatch","appSettingsActions","elementActions","dateReadableFr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.544362e4.chunk.js","sourcesContent":["export const ADD_ELEMENT = 'ADD_ELEMENT';\nexport const DELETE_ELEMENT = 'DELETE_ELEMENT';\nexport const DISPLAY_ELEMENT_SETTINGS = 'DISPLAY_ELEMENT_SETTINGS';\nexport const DISPLAY_ELEMENT_IN_FULL_SCREEN = 'DISPLAY_ELEMENT_IN_FULL_SCREEN';\nexport const RESET_ELEMENT_COUNT = 'RESET_ELEMENT_COUNT';\nexport const RENAME_ELEMENT = 'RENAME_ELEMENT';\nexport const CHANGE_ELEMENT_INCREMENT_BY = 'CHANGE_ELEMENT_INCREMENT_BY';\nexport const CHANGE_ELEMENT_COUNT = 'CHANGE_ELEMENT_COUNT';\nexport const CHANGE_ELEMENT_COUNT_HISTORY = 'CHANGE_ELEMENT_COUNT_HISTORY';","//---------//\n// Helpers //\n//---------//\n\nconst helpers = {\n    setStateElement: function(elements, indexElement, property, newValue, addToList) {\n      if (addToList === undefined) {\n        var newElements =   \n          [...elements.slice(0,indexElement), {\n            ...elements[indexElement], \n              [property]: newValue,\n            },\n            ...elements.slice(indexElement+1)]\n      } else if (addToList) {\n        newElements = elements;\n        newElements[indexElement][property].push(newValue);\n      } else if (addToList === false) {\n        newElements = elements;\n        newElements[indexElement][property].pop();\n      }\n      return newElements\n    },\n\n}\n\nexport default helpers;\n","import * as ElementActionTypes from '../constants/ElementActionTypes';\nimport helpers from './../helpers';\n\nconst initialState = {\n    elements: [\n      {\n        id: 1,\n        value: 'Customers',\n        count: 39,\n        gradient: 2,\n        color1: '#ba8f89',\n        color2: '#c6786c',\n        elementSettingsIsDisplayed: false,\n        elementIsInFullScreen: false,\n        incrementBy: 1,\n        countHistory: [[1614110353281, \"23/02/2021, 20:59:13\"],[1614110353281, \"23/02/2021, 20:59:13\"],[1614110353281, \"23/02/2021, 20:59:13\"]]\n      },\n      {\n        id: 2,\n        value: 'Pushups',\n        count: 50,\n        gradient: 3,\n        color1: '#ba8f89',\n        color2: '#c6786c',\n        elementSettingsIsDisplayed: false,\n        elementIsInFullScreen: false,\n        incrementBy: 10,\n        countHistory: []\n      },\n      {\n        id: 3,\n        value: 'Day without smoking',\n        count: 17,\n        gradient: 4,\n        color1: '#ba8f89',\n        color2: '#c6786c',\n        elementSettingsIsDisplayed: false,\n        elementIsInFullScreen: false,\n        incrementBy: 1,\n        countHistory: []\n      }\n    ]\n}\n\n\nexport default function element(state = initialState, action) {\n\tswitch (action.type) {\n        case ElementActionTypes.ADD_ELEMENT:\n            return {\n                ...state, elements: [\n                    ...state.elements, action.element\n                ]\n            }\n        case ElementActionTypes.DELETE_ELEMENT:\n            return {\n                ...state, elements: [\n                    ...state.elements.slice(0, action.indexElement),\n                    ...state.elements.slice(action.indexElement + 1)\n                ]\n            }\n\t\tcase ElementActionTypes.DISPLAY_ELEMENT_SETTINGS:\n            return {\n                ...state, elements: (helpers.setStateElement([...state.elements], action.indexElement, action.propertyName, action.newValue)),\n            }\n        case ElementActionTypes.DISPLAY_ELEMENT_IN_FULL_SCREEN:\n            return {\n                ...state, elements: action.newElements,\n            }\n\t\tcase ElementActionTypes.RESET_ELEMENT_COUNT:\n            return {\n                ...state, elements: action.newElements\n            }\n        case ElementActionTypes.RENAME_ELEMENT:\n            return {\n                ...state, elements: (helpers.setStateElement([...state.elements], action.indexElement, action.propertyName, action.newValue)),\n            }\n        case ElementActionTypes.CHANGE_ELEMENT_INCREMENT_BY:\n            return {\n                ...state, elements: (helpers.setStateElement([...state.elements], action.indexElement, action.propertyName, action.newValue)),\n            }\n        case ElementActionTypes.CHANGE_ELEMENT_COUNT:\n            return {\n                ...state, elements: (helpers.setStateElement([...state.elements], action.indexElement, action.propertyName, action.newValue)),\n            }\n        case ElementActionTypes.CHANGE_ELEMENT_COUNT_HISTORY:\n            var newElements = action.elements;\n            console.log(action.newValue);\n            newElements[action.indexElement].countHistory.push(action.newValue);\n            return {\n                ...state, elements: newElements\n            }\n        default:\n            return state\n\t}\n}\n\n\n\n","export const DISPLAY_APP_SETTINGS = 'DISPLAY_APP_SETTINGS';\nexport const MUTE_APP = 'MUTE_APP';\nexport const CONDENSE_APP = 'CONDENSE_APP';\nexport const COLORIZE_APP = 'COLORIZE_APP';","import * as AppSettingsActionTypes from '../constants/AppSettingsActionTypes';\nimport gradients from '../data/gradients';\n\n\nconst initialState = {\n    appIsMute: false,\n    appIsCondensed: false,\n    gradients: gradients,\n    appSettingsIsDisplayed: false,\n    gradient: 5,\n}\n\nexport default function appSettings(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase AppSettingsActionTypes.DISPLAY_APP_SETTINGS:\n            return {\n                ...state, appSettingsIsDisplayed: !state.appSettingsIsDisplayed\n            }\n\t\tcase AppSettingsActionTypes.MUTE_APP:\n            return {\n                ...state, appIsMute: !state.appIsMute\n            }\n        case AppSettingsActionTypes.CONDENSE_APP:\n            return {\n                ...state, appIsCondensed: !state.appIsCondensed\n            }\n        case AppSettingsActionTypes.COLORIZE_APP:\n            return {\n                ...state, gradient: action.indexGradient,\n            }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","const gradients = [\n    {\n         color1: '#4d4d4d',\n         color2: '#2c2c2c',\n    },\n    {\n         color1: '#757EA1',\n         color2: '#456F7B',\n    },\n    {\n        color1: '#9ea2e0',\n        color2: '#5a60dd',\n    },\n    {\n         color1: '#B599DE',\n         color2: '#8951DB',\n    },\n    {\n        color1: '#9B7286',\n        color2: '#A65B7D',\n    },\n    {\n        color1: '#ba8f89',\n        color2: '#c6786c',\n    },\n    {\n        color1: '#C6AB6C',\n        color2: '#A58743',\n    },\n    {\n         color1: '#688D70',\n         color2: '#509264',\n    },\n]\nexport default gradients;","import { combineReducers } from 'redux'\n\nimport element from './element';\nimport appSettings from './appSettings';\n\nexport default combineReducers({\n\telement,\n\tappSettings,\n})\n","import {createStore, compose} from 'redux';\nimport rootReducer from './reducers';\n\nconst enhancers = compose(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default function configureStore(initialState) {\n  return createStore(rootReducer, initialState, enhancers);\n}","import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport helpers from '../../helpers';\nimport * as dayjs from 'dayjs'\n\nimport calendar from 'dayjs/plugin/calendar';\n//import isToday from 'dayjs/plugin/isToday';\nimport isYesterday from 'dayjs/plugin/isYesterday';\n\nclass ElementSettings extends Component {\n    state = {\n        value: '',\n        incrementBy: '',\n    };\n    \n    // State changes for Name input\n    handleNameChange = (e) => {\n        this.setState({ value: e.target.value});\n    }\n\n    // State changes for IncrementBy input\n    handleChangeStateIncrementBy = (e) => {\n        if (e.target.value !== '') {\n            this.setState({ incrementBy: parseInt(e.target.value)});\n        }\n    }\n\n\n    // Set the count back to 0\n    handleResetElementCount = (indexElement) =>\n    this.props.resetElementCount(helpers.setStateElement(this.props.elements, indexElement, 'count', 0));\n\n    // Change Element name\n    handleRenameElement = (e, newValue, indexElement) => {\n        e.preventDefault();\n        if (newValue !== '') {\n            this.props.renameElement(indexElement, 'value', newValue);\n        }\n    }\n\n    // Change Element IncrementBy\n    handleChangeElementIncrementBy = (newIncrementBy, indexElement, oldIncrementBy) => {\n        if ((newIncrementBy !== '') && (newIncrementBy !== '0')) {\n            this.props.changeElementIncrementBy(indexElement, 'incrementBy', newIncrementBy);\n        } else if ((newIncrementBy == null) || (newIncrementBy === '0')) {\n            this.props.changeElementIncrementBy(indexElement, 'incrementBy', oldIncrementBy);\n        }\n    }\n\n    handleTimePlanning = () => {\n        // let dateOrganized = {};\n        // let allDates = this.props.countHistory[0];\n        // console.log(allDates);\n        // var isYesterday = require('dayjs/plugin/isYesterday')\n        // dayjs.extend(isYesterday);\n\n\n        // if (allDates) {\n        //     for (let date of allDates) {\n        //         if (date.isYesterday()) {\n        //             console.log(\"is yesterday\")\n        //         }\n        //     }\n\n        // }\n\n        // return dateOrganized\n    }\n\n    componentDidMount() {\n        this.handleTimePlanning()\n        //console.log(this.props.countHistory[0].getDate() - 7)\n    }\n\n    render() {       \n        const isSettingsClass = this.props.elementSettingsIsDisplayed ? \"is-open\" : '';\n        dayjs.extend(calendar);\n        dayjs.extend(isYesterday);\n\n        return(\n            <div \n                className={\"settings is-element \" + isSettingsClass}\n                style={{ height: this.props.settingsHeight }}\n            >\n                <form\n                    className=\"modify-form\"\n                    onSubmit={(e) => {\n                        this.handleRenameElement(e, this.state.value, this.props.index)\n                        this.handleChangeElementIncrementBy(this.state.incrementBy, this.props.index, this.props.incrementBy)\n                        this.setState({ incrementBy: '' });\n                        this.setState({ value: '' });\n                        this.props.handleDisplayElementSettings(this.props.index);\n                    }}\n                >\n                    {/* <div className=\"settings__item is-well\">\n                        <div className=\"settings__title is-big\">Customers</div>\n                        <div className=\"row align-items-center\">\n                            <div className=\"col-md-5 settings__stats-col no-border\">\n                                <div className=\"stats\">\n                                    <div className=\"toggle__group\">\n                                        <span className=\"toggle is-active\">Last week</span>\n                                        <span className=\"toggle\">Last month</span>\n                                        <span className=\"toggle\">Last year</span>\n                                    </div>\n                                    <div className=\"square-stats\" style={{ width: \"100%\", height: \"200px\", border: \"solid 1px #cacaca\" }}></div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-7\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-4 settings__stats-col no-border\">\n                                        <div className=\"settings__stats-col--count\">3</div>\n                                        <div className=\"settings__stats-col--title\">Today</div>\n                                    </div>\n                                    <div className=\"col-md-4 settings__stats-col\">\n                                        <div className=\"settings__stats-col--count\">12</div>\n                                        <div className=\"settings__stats-col--title\">Last week</div>\n                                    </div>\n                                    <div className=\"col-md-4 settings__stats-col\">\n                                        <div className=\"settings__stats-col--count\">34</div>\n                                        <div className=\"settings__stats-col--title\">Last month</div>\n                                    </div>\n                                </div>\n                                \n                            </div>\n                        </div>\n                        <span className=\"settings__title\">Data visualisation:</span>\n                        {this.props.countHistory.map(element => {\n                            let time = dayjs().calendar(element[0]);\n                            console.log(time)\n                            return <div>{time}</div>\n                        })}\n                    </div> */}\n                    {/* Actions */}\n                    <div className=\"settings__item btn-actions\">\n                        <div\n                            className=\"btn btn-action\"\n                            onClick={() => this.handleResetElementCount(this.props.index)}\n                        >\n                            Reset to 0\n                        </div>\n                        <div\n                            className=\"btn btn-action\"\n                            onClick={() => this.props.handleElementFullScreen(this.props.index)}\n                        >\n                            Full screen\n                        </div>\n                        <div\n                            className=\"btn btn-action btn-danger\"\n                            onClick={() => this.props.deleteElement(this.props.index)}\n                        >\n                            Delete\n                        </div>\n                    </div>\n                    <hr/>\n                    {/* Name */}\n                    <div className=\"settings__item\">\n                        <span className=\"settings__title\">Name:</span>\n                            <input\n                                value={this.state.value}\n                                type=\"text\" \n                                placeholder=\"Enter a new name\"\n                                onChange={this.handleNameChange}\n                            />\n                    </div>\n                    {/* Increment by */}\n                    <div className=\"settings__item\">\n                        <span className=\"settings__title\">Step: <span className=\"settings__title--notice\">Now {this.props.incrementBy} by {this.props.incrementBy}</span></span>\n                            <input\n                                value={this.state.incrementBy}\n                                type=\"number\"\n                                placeholder=\"How much you want to add every count up ?\"\n                                onChange={this.handleChangeStateIncrementBy}\n                            />\n                    </div>\n                    <hr/>\n                    {/* Ok and Close */}\n                    <div className=\"settings__item\">\n                        <label>\n\n                            <input\n                                value=\"Save and close\"\n                                className=\"d-none\"\n                                type=\"submit\"\n                                />\n                                <span className=\"btn btn-primary\">\n                                    <svg className=\"element__settings\" height=\"512pt\" viewBox=\"0 -21 512 512\" width=\"512pt\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path className=\"path-1\" d=\"m448 42.667969h-206.613281c9.28125 19.433593 14.613281 41.066406 14.613281 64 0 22.933593-5.332031 44.5625-14.613281 64h206.613281c17.152344 0 33.257812-6.636719 45.3125-18.6875 12.054688-12.054688 18.6875-28.160157 18.6875-45.3125 0-35.285157-28.714844-64-64-64zm0 0\"/>\n                                        <path className=\"path-2\" d=\"m213.332031 106.667969c0 58.910156-47.753906 106.664062-106.664062 106.664062-58.910157 0-106.667969-47.753906-106.667969-106.664062 0-58.910157 47.757812-106.667969 106.667969-106.667969 58.910156 0 106.664062 47.757812 106.664062 106.667969zm0 0\"/>\n                                        <path className=\"path-3\" d=\"m256 362.667969c0-22.933594 5.332031-44.566407 14.613281-64h-206.613281c-35.285156 0-64 28.714843-64 64 0 17.152343 6.632812 33.257812 18.6875 45.3125 12.054688 12.050781 28.160156 18.6875 45.3125 18.6875h206.613281c-9.28125-19.4375-14.613281-41.066407-14.613281-64zm0 0\"/>\n                                        <path className=\"path-4\" d=\"m512 362.667969c0 58.910156-47.757812 106.664062-106.667969 106.664062-58.910156 0-106.664062-47.753906-106.664062-106.664062 0-58.910157 47.753906-106.667969 106.664062-106.667969 58.910157 0 106.667969 47.757812 106.667969 106.667969zm0 0\"/>\n                                    </svg>\n                                    Save and close\n                                </span>\n                            </label>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nElementSettings.propTypes = {\n    index: PropTypes.number.isRequired,\n    elements: PropTypes.array.isRequired,\n    elementSettingsIsDisplayed: PropTypes.bool.isRequired,\n    incrementBy: PropTypes.number.isRequired,\n    settingsHeight: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n      ]).isRequired,\n\n\n    handleElementFullScreen: PropTypes.func.isRequired,\n    changeElementIncrementBy: PropTypes.func.isRequired,\n    resetElementCount: PropTypes.func.isRequired,\n    handleDisplayElementSettings: PropTypes.func.isRequired,\n    deleteElement: PropTypes.func.isRequired,\n    renameElement: PropTypes.func.isRequired,\n}\n\nexport default ElementSettings;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Actions = props => \n    <div className=\"element__actions\">\n        {/* toggle Full screen */}\n        <span \n            className=\"element__actions-btn hide-list-screen\" \n            onClick={() => props.handleElementFullScreen(props.index)} \n        >\n            <svg className=\"element__full-screen\"  pointerEvents=\"all\" xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"22 22 57 57\" x=\"0px\" y=\"0px\">\n                <g>\n                    <path className=\"path-1\" d=\"M70,42h8V30a8,8,0,0,0-8-8H58v8H70Z\"/>\n                    <path className=\"path-2\" d=\"M78,70V58H70V70H58v8H70A8,8,0,0,0,78,70Z\"/>\n                    <path className=\"path-3\" d=\"M30,78H42V70H30V58H22V70A8,8,0,0,0,30,78Z\"/>\n                    <path className=\"path-4\" d=\"M30,30H42V22H30a8,8,0,0,0-8,8V42h8Z\"/>\n                </g>\n            </svg>\n        </span>\n        {/* toggle Settings */}\n        <span\n            className=\"element__actions-btn hide-full-screen\"\n            onClick={() => props.handleDisplayElementSettings(props.index)}\n        >\n            <svg className=\"element__settings\" height=\"512pt\" viewBox=\"0 -21 512 512\" width=\"512pt\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path className=\"path-1\" d=\"m448 42.667969h-206.613281c9.28125 19.433593 14.613281 41.066406 14.613281 64 0 22.933593-5.332031 44.5625-14.613281 64h206.613281c17.152344 0 33.257812-6.636719 45.3125-18.6875 12.054688-12.054688 18.6875-28.160157 18.6875-45.3125 0-35.285157-28.714844-64-64-64zm0 0\"/>\n                <path className=\"path-2\" d=\"m213.332031 106.667969c0 58.910156-47.753906 106.664062-106.664062 106.664062-58.910157 0-106.667969-47.753906-106.667969-106.664062 0-58.910157 47.757812-106.667969 106.667969-106.667969 58.910156 0 106.664062 47.757812 106.664062 106.667969zm0 0\"/>\n                <path className=\"path-3\" d=\"m256 362.667969c0-22.933594 5.332031-44.566407 14.613281-64h-206.613281c-35.285156 0-64 28.714843-64 64 0 17.152343 6.632812 33.257812 18.6875 45.3125 12.054688 12.050781 28.160156 18.6875 45.3125 18.6875h206.613281c-9.28125-19.4375-14.613281-41.066407-14.613281-64zm0 0\"/>\n                <path className=\"path-4\" d=\"m512 362.667969c0 58.910156-47.757812 106.664062-106.667969 106.664062-58.910156 0-106.664062-47.753906-106.664062-106.664062 0-58.910157 47.753906-106.667969 106.664062-106.667969 58.910157 0 106.667969 47.757812 106.667969 106.667969zm0 0\"/>\n            </svg>\n        </span>\n        {/* Decrements */}\n        <span \n            className=\"element__actions-btn\" \n            onClick={() => props.handleChangeElementCount(props.index, 'decrement')}\n        >\n            <span className=\"element__button element__button--minus\">-</span>\n        </span>\n    </div>\n\n\nActions.propTypes = {\n    index: PropTypes.number.isRequired,\n    handleElementFullScreen: PropTypes.func.isRequired,\n    handleDisplayElementSettings: PropTypes.func.isRequired,\n    handleChangeElementCount: PropTypes.func.isRequired,\n}\n\nexport default Actions;","export default __webpack_public_path__ + \"static/media/clic.92f35524.mp3\";","import React, {Component, Fragment} from 'react';\nimport ElementSettings from './ElementSettings';\nimport Actions from './Actions';\nimport PropTypes from 'prop-types';\nimport ResizeObserver from 'rc-resize-observer';\nimport helpers from '../../helpers';\nimport ClicSound from '../../assets/clic.mp3'\n\n\nclass Element extends Component {\n    \n    state = {\n        isFullScreen: false,\n        elementSettingsIsDisplayed: false,\n        isClicked: false,\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        position: 'relative',\n        zIndex: 3,\n        soundPlaying: 0,\n        elementSettingsHeight: null,\n        elementSettingsHeightCondensed: null,\n    }\n    \n    element = React.createRef();\n    elementSpaceAttribute = '';\n    audio = [];\n    \n    componentDidMount() {\n        this.setsWidth();\n        this.elementSpaceAttribute = this.element.current.getBoundingClientRect();\n     \n        // Create and preload 10 sounds for mobile delay\n        for (let i = 0; i < 10; i++) {\n            this.audio = [\n                ...this.audio,\n                new Audio (ClicSound)\n            ]\n            this.audio[i].preload = 'auto';\n        }\n        \n        if (this.props.index === 0) {\n            // Wait for mirror to be created then call setsElementSettingsHeight\n            let mirrorIsDone = function functionOne(){\n                return new Promise(()=>{\n                    //if (this.elementsDisplayed === 1) {\n                        this.createMirrorElement();\n                });\n            }.bind(this);\n                mirrorIsDone().then(()=>{\n                    // Does it only once in the list\n                    this.setsElementSettingsHeight()\n            });\n        }\n    }\n\n    setsWidth = () => {\n        let widthContainer = document.querySelector('.element__container').getBoundingClientRect()\n        this.setState({width: widthContainer.width});\n        this.element.current.style.cssText = \"width: \" + this.state.width + \"px;\";\n    }\n\n    // Create a copy of App Settings to set a natural fixed height to the original element\n    createMirrorElement = () => {\n        // forces update if new actions have change its state\n        if (document.querySelector('.settings.is-mirror.is-element')) {\n            document.querySelector('.settings.is-mirror.is-element').remove();\n        }\n        var mirrorElement = document.querySelector('.settings.is-element').cloneNode(true);\n        document.querySelector('.element__container').appendChild(mirrorElement);\n        mirrorElement.classList.add('is-mirror', 'is-open');\n    }\n\n    // Gets new settings height and sets it to state\n    setsElementSettingsHeight = () => {\n        this.createMirrorElement();\n        let elementSettingsDOM = document.querySelector('.settings.is-mirror.is-element');\n        let appDOM = document.querySelector('.app');\n        if (this.props.appIsCondensed) {\n            this.setState({elementSettingsHeightCondensed: elementSettingsDOM.offsetHeight + \"px\"});\n            appDOM.classList.remove('is-condensed');\n            this.setState({elementSettingsHeight: elementSettingsDOM.offsetHeight + \"px\"});\n            appDOM.classList.add('is-condensed');\n        } else {\n            this.setState({elementSettingsHeight: elementSettingsDOM.offsetHeight + \"px\"});\n            appDOM.classList.add('is-condensed');\n            this.setState({elementSettingsHeightCondensed: elementSettingsDOM.offsetHeight + \"px\"});\n            appDOM.classList.remove('is-condensed');\n        }\n    }\n\n    // Place DOM element in after reference Dom element\n    insertAfter(newNode, referenceNode) {\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n    }  \n\n    // Change Element settingsOpen\n    handleDisplayElementSettings = (indexElement) => {\n        this.setsElementSettingsHeight();\n        // Toggle settingsOpen boolean\n        let newState = !this.props.elements[indexElement].elementSettingsIsDisplayed;\n        // Updates store with helper\n        this.props.displayElementSettings(indexElement, 'elementSettingsIsDisplayed', newState);\n    }\n\n    handleChangeElementCount = (indexElement, changeType) => {\n        // Play sound\n        if (!this.props.appIsMute) {\n          this.audio[this.state.soundPlaying].load();\n          this.audio[this.state.soundPlaying].play()\n        }\n        this.setState({\n          soundPlaying: (this.state.soundPlaying +1) % 10\n        })\n    \n        // Check if resuslt is a positive number, otherwise sets it to 1\n        let incrementBy = this.props.elements[indexElement].incrementBy;\n        if ((incrementBy === 0) || (incrementBy === '')) {\n          incrementBy = parseInt(1);\n        }\n        // Increment or decrement by the new value\n        parseInt(incrementBy);\n        if (changeType === \"increment\") {\n          let newState = this.props.elements[indexElement].count +=  incrementBy;\n          this.props.changeElementCount(indexElement, 'count', newState);\n        } else if (changeType === \"decrement\") {\n            let newState = this.props.elements[indexElement].count -=  incrementBy\n            this.props.changeElementCount(indexElement, 'count', newState);\n        }\n      }\n\n    handleElementFullScreen = (indexElement) => {\n\n        // CLOSING\n        if (this.props.elements[indexElement].elementIsInFullScreen) {\n            \n            // Sets back original positionning\n            // Get valeu from state\n            this.element.current.style.cssText = \n                \"width: \" + this.elementSpaceAttribute.width + \"px;\"+\n                \"height: \" + this.elementSpaceAttribute.height + \"px;\"+\n                \"left: \" + this.elementSpaceAttribute.x + \"px;\"+\n                \"top: \" + this.elementSpaceAttribute.y + \"px;\"+\n                \"position: fixed;\" + \n                \"z-index: 99;\";\n              \n            this.setState({ \n                    width: this.elementSpaceAttribute.width,\n                    height: this.elementSpaceAttribute.height,\n                    top: this.elementSpaceAttribute.y,\n                    left: this.elementSpaceAttribute.x,\n                    position: \"fixed\",\n                    zIndex: \"99\",\n                }, () => {\n                    this.element.current.style.cssText = \n                        \"width: \" + this.state.width + \"px;\"+\n                        \"height: \" + this.state.height + \"px;\"+\n                        \"left: \" + this.state.left + \"px;\"+\n                        \"top: \" + this.state.top + \"px;\"+\n                        \"position:\"+ this.state.position +\";\"+\n                        \"z-index:\"+ this.state.zIndex;\n                }\n            )\n            \n            // Toggle Open state and class\n            setTimeout(function(){ \n                let newState = ! this.props.elements[indexElement].elementIsInFullScreen;\n                this.props.displayElementInFullScreen(helpers.setStateElement(this.props.elements, indexElement, 'elementIsInFullScreen', newState));\n            }.bind(this), 0);\n            \n            // Fixes once animation is done and Removes mirror element\n            setTimeout(function(){ \n                this.setState({ \n                    width: this.elementSpaceAttribute.width,\n                    height: this.elementSpaceAttribute.height,\n                    top: '',\n                    left: '',\n                    position: \"relative\",\n                    zIndex: '',\n                }, () => {\n                    this.element.current.style.cssText = \n                        \"width: \" + this.state.width + \"px;\"+\n                        \"height: \" + this.state.height + \"px\"+\n                        \"left: \" + this.state.left + \";\"+\n                        \"top: \" + this.state.top + \";\"+\n                        \"position:\"+ this.state.zIndex +\";\";\n                }\n            )\n            // Remove copy in DOM\n            document.querySelector('.mirror-element').remove();\n\n            }.bind(this), 300);\n        }\n\n        // OPENING\n        else {\n            this.elementSpaceAttribute = this.element.current.getBoundingClientRect();\n\n            // Create copy in dom\n            let mirrorElement = this.element.current.cloneNode(true);\n            mirrorElement.style.cssText = \"visibility: hidden\";\n            mirrorElement.classList.add(\"mirror-element\");\n            this.insertAfter(mirrorElement, this.element.current);\n            \n            // Sets in fixed position\n            this.setState({\n                    width: this.elementSpaceAttribute.width,\n                    height: this.elementSpaceAttribute.height,\n                    top: this.elementSpaceAttribute.y,\n                    left: this.elementSpaceAttribute.x,\n                    position: \"fixed\",\n                }, () => {\n                    this.element.current.style.cssText = \n                        \"width: \" + this.state.width + \"px;\"+\n                        \"height: \" + this.state.height + \"px;\"+\n                        \"left: \" + this.state.left + \"px;\"+\n                        \"top: \" + this.state.top + \"px;\"+\n                        \"position:\"+ this.state.position +\";\";\n                }\n            )\n\n            // Toggle Open state and class\n            setTimeout(function(){ \n                let newState = ! this.props.elements[indexElement].elementIsInFullScreen;\n                this.props.displayElementInFullScreen(helpers.setStateElement(this.props.elements, indexElement, 'elementIsInFullScreen', newState));\n            }.bind(this), 0);\n        }\n    }\n\n    handleUpdateHistoryCount = (indexElement) => {\n        let dateNow = Date.now();\n        let dateReadableFr = new Date(dateNow).toLocaleString('fr-FR', {timeZone: 'CET'});\n        let newDateObject = [dateNow, dateReadableFr]\n        this.props.changeElementCountHistory(this.props.elements, indexElement, 'countHistory', newDateObject);\n    }\n\n    render() {\n        \n        const {\n            index,\n            elements,\n            count,\n            value,\n            incrementBy,\n            elementSettingsIsDisplayed,\n\n            resetElementCount,\n            renameElement,\n            changeElementIncrementBy,\n            deleteElement,\n        } = this.props;\n\n        const isFullScreenClass = this.props.elements[index].elementIsInFullScreen ? \"is-open\" : '';\n\n        const isCondensedClass = this.props.appIsCondensed ? \"is-condensed\" : '';\n        \n        const isClicked = this.state.isClicked ? \"is-clicked\" : '';\n\n        let textSizeClass = (this.props.count > 9999) ? \"reduced-text-1\" : '';\n\n        let elementSettingsHeightToGve = !this.props.elementSettingsIsDisplayed ? 0 : this.props.appIsCondensed ? this.state.elementSettingsHeightCondensed : this.state.elementSettingsHeight;\n\n        return(\n            <ResizeObserver onResize={() => {this.setsWidth(); this.setsElementSettingsHeight()}}>\n                <Fragment>\n                    {/* Settings */}\n                    <ElementSettings                   \n                        key={index}\n\n                        index={index}\n                        settingsHeight={elementSettingsHeightToGve}\n                        elements={elements}\n                        incrementBy={incrementBy}\n                        elementSettingsIsDisplayed={elementSettingsIsDisplayed}\n                        countHistory={this.props.countHistory}\n                        \n                        resetElementCount={resetElementCount}\n                        renameElement={renameElement}\n                        changeElementIncrementBy={changeElementIncrementBy}\n                        deleteElement={deleteElement}\n                        handleDisplayElementSettings={this.handleDisplayElementSettings}\n                        handleElementFullScreen={this.handleElementFullScreen}\n                    />\n                    \n                    {/* ELEMENT */}\n                    <div \n                        className={isFullScreenClass + \" \" + isCondensedClass + \" element justify-content-center d-flex animate__animated animate__fadeInDown\"} \n                        ref={this.element}\n                    >\n                        <span className=\"element__bg\"></span>\n\n                        {/* Actions button */}\n                        <Actions\n                            index={index}\n\n                            handleDisplayElementSettings={this.handleDisplayElementSettings}\n                            handleChangeElementCount={this.handleChangeElementCount}\n                            handleElementFullScreen={this.handleElementFullScreen}\n                        />\n                        \n                        {/* Title */}\n                        <h6 className=\"element__title\">\n                            {value}\n                            <span className=\"element__title--notice\"> (+{incrementBy})</span>\n                        </h6>\n                        \n                        {/* Count */}\n                        <span className={isClicked + \" \" + textSizeClass + \" element__count\"}>{count}</span>\n\n                        {/* Increments */}\n                        <span \n                            className=\"element__button element__button--plus\"\n                            onClick={() => {this.handleChangeElementCount(index, 'increment'); this.handleUpdateHistoryCount(index) }}\n                            onMouseUp={(e) => this.setState({isClicked: false})}\n                            onMouseDown={(e) => this.setState({isClicked: true})}\n                        >+</span>\n                    </div>\n                </Fragment>\n            </ResizeObserver>\n        );\n    }\n}\n\nElement.propTypes = {     \n    index: PropTypes.number.isRequired,\n    elements: PropTypes.array.isRequired,\n    count: PropTypes.number.isRequired,\n    value: PropTypes.string.isRequired,\n\n    incrementBy: PropTypes.number.isRequired,\n    elementSettingsIsDisplayed: PropTypes.bool.isRequired,\n\n    resetElementCount: PropTypes.func.isRequired,\n    renameElement: PropTypes.func.isRequired,\n    changeElementIncrementBy: PropTypes.func.isRequired,\n    deleteElement: PropTypes.func.isRequired,\n    displayElementSettings: PropTypes.func.isRequired,\n    displayElementInFullScreen: PropTypes.func.isRequired,\n}\n\nexport default Element;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AppSettings extends Component {\n\n    render() {\n\n        const isOpenSettingsClass = this.props.appSettingsIsDisplayed ? \"is-open\" : '';\n        const appIsMuteLabel = this.props.appIsMute ? \"Unmute app\" : 'Mute app';\n        const appIsCondensedLabel = this.props.appIsCondensed ? \"Large view\" : 'Compact view';\n\n        return(\n            <div \n                className={\"settings is-app \" + isOpenSettingsClass}\n                style={{ height: this.props.appSettingsHeight }}\n            >\n                <div className=\"row\">\n                    <hr className=\"\"/>\n\n                    {/* Actions */}\n                    <div className=\"settings__item btn-actions col-lg-5\">\n                        <div\n                            className=\"btn btn-action\"\n                            onClick={() => this.props.muteApp()}\n                        >\n                            {appIsMuteLabel}\n                        </div>\n                        <div\n                            className=\"btn btn-action\"\n                            onClick={() => this.props.condenseApp()}\n                        >\n                            {appIsCondensedLabel}\n                        </div>\n                    </div>\n                    <hr className=\"d-lg-none d-xl-none\"/>\n                    {/* Color */}\n                    <div className=\"settings__item col-lg-7\">\n                        <span className=\"settings__title\">Color:</span>\n                        {this.props.gradients.map((el, index) => {\n                            let color1 = this.props.gradients[index].color1;\n                            let color2 = this.props.gradients[index].color2;\n                            let classActiveColor = (index === this.props.gradient) ? 'color-example active' : 'color-example';\n                            return <span \n                                        className={classActiveColor}\n                                        key={index}\n                                        onClick={ () => this.props.colorizeApp(index)}\n                                    >\n                                        <div \n                                            className=\"color-example__background\"\n                                            style={{backgroundImage: `linear-gradient(190deg, ${color1} 0%, ${color2} 100%)`}}\n                                        ></div>\n                                    </span>\n                            })}\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nAppSettings.propTypes = {\n    appSettingsIsDisplayed: PropTypes.bool.isRequired,\n    appSettingsHeight: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n      ]).isRequired,\n    \n    appIsMute: PropTypes.bool.isRequired,\n    muteApp: PropTypes.func.isRequired,\n\n    appIsCondensed: PropTypes.bool.isRequired,\n    condenseApp: PropTypes.func.isRequired,\n\n    colorizeApp: PropTypes.func.isRequired,\n\n    gradient: PropTypes.number.isRequired,\n    gradients: PropTypes.array.isRequired,\n}\n\nexport default AppSettings;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddElementForm extends Component {\n\n    state = {\n        value: '',\n    };\n\n    handleChange = (e) => {\n        this.setState({ value: e.target.value});\n    }\n\n    handleAddElement = (e) => {\n        e.preventDefault();\n        \n        // Create a new element\n        const newElement = {\n            value: this.state.value,\n            count: 0,\n            id: this.props.elements.length + 1,\n            settingsOpen: false,\n            incrementBy: 1,\n        }\n\n        // Add a new element to app state\n        this.props.addElement(newElement);\n        \n        // Clear input\n        this.setState({ value: '' });\n    }\n\n    render() {\n\n        return(\n            <form className=\"d-flex\" onSubmit={this.handleAddElement}>\n                <span \n                    className=\"form-element__left-action\"\n                    onClick={() => {this.props.displayAppSettings()}}\n                >\n                    <svg version=\"1.1\" viewBox=\"0 0 585.28 585.28\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"m538 227.83h-20.963c-5.225 0-13.502-6.353-17.029-15.471-1.242-3.213-2.576-6.432-3.963-9.569-3.953-8.938-2.596-19.278 1.096-22.962l14.838-14.819c18.441-18.443 18.441-48.443 6e-3 -66.879l-24.783-24.783c-8.951-8.951-20.83-13.877-33.455-13.877s-24.504 4.927-33.451 13.877l-14.822 14.822c-2.158 2.157-6.531 3.498-11.414 3.498-3.957 0-8.064-0.851-11.564-2.399-3.139-1.386-6.352-2.717-9.553-3.957-9.123-3.528-15.479-11.809-15.479-17.032v-20.983c-1e-3 -26.074-21.216-47.292-47.29-47.292h-35.049c-26.077 0-47.289 21.215-47.289 47.292v20.982c0 5.223-6.356 13.5-15.475 17.029-3.191 1.233-6.405 2.564-9.553 3.954-3.5 1.548-7.613 2.399-11.573 2.399-4.883 0-9.259-1.34-11.417-3.495l-14.829-14.823c-8.938-8.938-20.82-13.865-33.452-13.865s-24.504 4.927-33.431 13.877l-24.77 24.772c-18.437 18.437-18.437 48.437 0 66.873l14.823 14.823c3.69 3.69 5.052 14.039 1.102 22.987-1.383 3.136-2.714 6.349-3.951 9.553-3.525 9.116-11.805 15.468-17.035 15.468h-20.976c-26.077 0-47.289 21.215-47.289 47.292v35.049c0 26.074 21.215 47.289 47.289 47.289h20.973c5.227 0 13.51 6.352 17.032 15.469 1.236 3.201 2.567 6.414 3.95 9.549 3.951 8.949 2.589 19.297-1.102 22.988l-14.823 14.822c-18.437 18.434-18.437 48.449-6e-3 66.9l24.786 24.789c8.935 8.932 20.808 13.854 33.437 13.854 12.628 0 24.501-4.918 33.437-13.854l14.832-14.842c2.188-2.189 6.454-3.496 11.408-3.496 3.957 0 8.063 0.85 11.567 2.398 3.109 1.377 6.328 2.711 9.562 3.963 9.122 3.527 15.475 11.805 15.475 17.029v20.963c0 26.074 21.215 47.293 47.289 47.293h35.05c26.076 0 47.289-21.215 47.289-47.293v-20.963c0-5.225 6.352-13.502 15.467-17.023 3.201-1.236 6.414-2.566 9.551-3.953 3.5-1.545 7.607-2.396 11.564-2.396 4.889 0 9.266 1.34 11.422 3.498l14.822 14.822c8.961 8.936 20.842 13.854 33.469 13.854 1.367 0 2.75-0.062 4.111-0.182 17.268-1.5 32.502-16.805 40.686-25.027l1.035-1.037 12.391-12.391c18.404-18.451 18.404-48.455 8e-3 -66.895l-14.832-14.832c-3.689-3.689-5.051-14.039-1.102-22.99 1.391-3.145 2.719-6.357 3.951-9.549 3.525-9.117 11.803-15.469 17.025-15.469h20.965c26.078 0 47.289-21.215 47.289-47.293v-35.045c0.012-26.076-21.203-47.291-47.277-47.291zm-117.39 64.817c0 70.559-57.402 127.96-127.96 127.96-70.558 0-127.96-57.402-127.96-127.96 0-70.557 57.403-127.96 127.96-127.96 70.557-1e-3 127.96 57.401 127.96 127.96z\"/>\n                    </svg>\n                </span>\n                <input\n                    className=\"form-element__input\" \n                    value={this.state.value}\n                    type=\"text\" \n                    placeholder=\"Enter a new name\"\n                    onChange={this.handleChange}\n                    ></input>\n                <input\n                    type=\"submit\" \n                    className=\"form-element__btn btn btn-primary\"\n                    value=\"Add\"\n                    />\n                <span className=\"bg-btn\"></span>\n            </form>\n        )\n    }\n}\n\nAddElementForm.propTypes = {  \n    elements: PropTypes.array.isRequired,\n    \n    addElement: PropTypes.func.isRequired,\n    \n    displayAppSettings: PropTypes.func.isRequired,\n}\n\nexport default AddElementForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AppSettings from './AppSettings';\nimport AddElementForm from './AddElementForm';\nimport ResizeObserver from 'rc-resize-observer';\n\nclass TopBar extends Component {\n\n    state = {\n        appSettingsHeight: null,\n        appSettingsHeightCondensed: null,\n    }\n    \n    // Create a copy of App Settings to set a natural fixed height to the original element\n    createMirrorElement = () => {\n        // forces update if new actions have change its state\n        if (document.querySelector('.settings.is-mirror.is-app')) {\n            document.querySelector('.settings.is-mirror.is-app').remove();\n        }\n        var mirrorElement = document.querySelector('.settings.is-app').cloneNode(true);\n        document.querySelector('.form-element').appendChild(mirrorElement);\n        mirrorElement.classList.add('is-mirror', 'is-open');\n    }\n\n    // Gets new settings height and sets it to state\n    setsAppSettingsHeight = () => {\n        this.createMirrorElement();\n        let appSettingsHeightDOM = document.querySelector('.settings.is-mirror.is-app');\n        let appDOM = document.querySelector('.app');\n        if (this.props.appIsCondensed) {\n            this.setState({appSettingsHeightCondensed: appSettingsHeightDOM.offsetHeight + \"px\"});\n            appDOM.classList.remove('is-condensed');\n            this.setState({appSettingsHeight: appSettingsHeightDOM.offsetHeight + \"px\"});\n            appDOM.classList.add('is-condensed');\n        } else {\n            this.setState({appSettingsHeight: appSettingsHeightDOM.offsetHeight + \"px\"});\n            appDOM.classList.add('is-condensed');\n            this.setState({appSettingsHeightCondensed: appSettingsHeightDOM.offsetHeight + \"px\"});\n            appDOM.classList.remove('is-condensed');\n        }\n    }\n\n    componentDidMount() {\n        // Wait for mirror to be created then call setsAppSettingsHeight\n        let mirrorIsDone = function functionOne(){\n            return new Promise(()=>{\n                this.createMirrorElement();\n            });\n        }.bind(this);\n        \n        mirrorIsDone().then(()=>{\n            this.setsAppSettingsHeight()\n        });\n    }    \n    \n    render() {\n        const isSettingsClass = this.props.appSettingsIsDisplayed ? \"is-open\" : '';\n        let appAettingsHeightToGve = !this.props.appSettingsIsDisplayed ? 0 : this.props.appIsCondensed ? this.state.appSettingsHeightCondensed : this.state.appSettingsHeight;\n\n        return(\n            <ResizeObserver onResize={() => this.setsAppSettingsHeight()}>\n                <div className={\"form-element mt-3 \" + isSettingsClass}>\n                    <AddElementForm\n                        elements={this.props.elements}\n                        addElement={this.props.addElement}\n\n                        displayAppSettings={this.props.displayAppSettings}\n                    />\n                    <AppSettings \n                        appSettingsIsDisplayed={this.props.appSettingsIsDisplayed}\n                        appSettingsHeight={appAettingsHeightToGve}\n\n                        appIsMute={this.props.appIsMute}\n                        muteApp={this.props.muteApp}\n\n                        appIsCondensed={this.props.appIsCondensed}\n                        condenseApp={this.props.condenseApp}\n\n                        colorizeApp={this.props.colorizeApp}\n\n                        gradient={this.props.gradient}\n                        gradients={this.props.gradients}\n                    />\n                </div>\n            </ResizeObserver>\n        )\n    }\n}\n\nTopBar.propTypes = {\n    appSettingsIsDisplayed: PropTypes.bool.isRequired,\n    \n    appIsMute: PropTypes.bool.isRequired,\n    muteApp: PropTypes.func.isRequired,\n\n    appIsCondensed: PropTypes.bool.isRequired,\n    condenseApp: PropTypes.func.isRequired,\n\n    colorizeApp: PropTypes.func.isRequired,\n\n    gradient: PropTypes.number.isRequired,\n    gradients: PropTypes.array.isRequired,\n    \n    elements: PropTypes.array.isRequired,\n    addElement: PropTypes.func.isRequired,\n    \n    displayAppSettings: PropTypes.func.isRequired,\n}\n\nexport default TopBar;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as elementActions from './actions/elementActions';\nimport * as appSettingsActions from './actions/appSettingsActions';\nimport Element from './components/Element';\nimport Topbar from './components/TopBar';\nimport './App.css';\n\nclass App extends Component {\n\n  scrollToListTop = () => this.container.current.scrollIntoView();\n  \n  container = React.createRef();\n  \n  render(){\n    \n    const appIsCondensedClass = this.props.appSettings.appIsCondensed ? \"is-condensed\" : '';\n    const isGradientClass = \"gradient-\" + this.props.appSettings.gradient; \n\n    return (\n      <div className={appIsCondensedClass + \" \" + isGradientClass +\" background-gradient app\"}>\n          <div className=\"container\">\n              <div \n                className=\"element__container\"\n              >\n                {this.props.elements.elements.map( (element, index) =>\n                  <Element \n                    key={index}\n                    id={element.id}\n                    index={index}\n                    elements={this.props.elements.elements}\n\n                    value={element.value}\n                    renameElement={this.props.renameElement}\n\n                    count={element.count}\n                    changeElementCount={this.props.changeElementCount}\n\n                    incrementBy={element.incrementBy}\n                    modifyIncrementBy={this.modifyIncrementBy}\n\n                    appIsMute={this.props.appSettings.appIsMute}\n                    soundPlaying={this.props.appSettings.soundPlaying}\n\n                    appIsCondensed={this.props.appSettings.appIsCondensed}\n                    handleCondensing={this.handleCondensing}\n\n                    elementSettingsIsDisplayed={element.elementSettingsIsDisplayed}\n                    displayElementSettings={this.props.displayElementSettings}\n\n                    changeElementIncrementBy={this.props.changeElementIncrementBy}\n                    \n                    countHistory={element.countHistory}\n                    changeElementCountHistory={this.props.changeElementCountHistory}\n\n                    modifyColor={this.modifyColor}\n\n                    resetElementCount={this.props.resetElementCount}\n\n                    displayElementInFullScreen={this.props.displayElementInFullScreen}\n\n                    deleteElement={this.props.deleteElement}\n                  />\n                )}\n                <div \n                  ref={this.container} \n                  className=\"anchor\"\n                ></div>\n              </div>\n              <div className=\"element__container element__container--form\">\n                <Topbar \n                  elements={this.props.elements.elements}\n                  gradients={this.props.appSettings.gradients}\n                  gradient={this.props.appSettings.gradient}\n\n                  appSettingsIsDisplayed={this.props.appSettings.appSettingsIsDisplayed}\n                  displayAppSettings={this.props.displayAppSettings}\n\n                  appIsCondensed={this.props.appSettings.appIsCondensed}\n                  condenseApp={this.props.condenseApp}\n\n                  appIsMute={this.props.appSettings.appIsMute}\n                  muteApp={this.props.muteApp}\n\n                  addElement={this.props.addElement}\n\n                  colorizeApp={this.props.colorizeApp}\n                />\n              </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  appSettings: state.appSettings,\n  elements: state.element\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    displayAppSettings: () => dispatch(appSettingsActions.displayAppSettings()),\n    muteApp: () => dispatch(appSettingsActions.muteApp()),\n    condenseApp: () => dispatch(appSettingsActions.condenseApp()),\n    colorizeApp: (indexGradient) => dispatch(appSettingsActions.colorizeApp(indexGradient)),\n    \n    addElement: (element) => dispatch(elementActions.addElement(element)),\n    deleteElement: (indexElement) => dispatch(elementActions.deleteElement(indexElement)),\n    displayElementSettings: (indexElement, propertyName, newValue) => dispatch(elementActions.displayElementSettings(indexElement, propertyName, newValue)),\n    displayElementInFullScreen: (newElements) => dispatch(elementActions.displayElementInFullScreen(newElements)),\n    resetElementCount: (newElements) => dispatch(elementActions.resetElementCount(newElements)),\n    renameElement: (indexElement, propertyName, newValue) => dispatch(elementActions.renameElement(indexElement, propertyName, newValue)),\n    changeElementIncrementBy: (indexElement, propertyName, newValue) => dispatch(elementActions.changeElementIncrementBy(indexElement, propertyName, newValue)),\n    changeElementCount: (indexElement, propertyName, newValue) => dispatch(elementActions.changeElementCount(indexElement, propertyName, newValue)),\n    changeElementCountHistory: (indexElement, propertyName, newValue, addToList, dateReadableFr) => dispatch(elementActions.changeElementCountHistory(indexElement, propertyName, newValue, addToList, dateReadableFr)),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import * as AppSettingsActionTypes from '../constants/AppSettingsActionTypes';\n\nexport const displayAppSettings = () => {\n    return {\n        type: AppSettingsActionTypes.DISPLAY_APP_SETTINGS,\n    }\n}\n\nexport const muteApp = () => {\n    return {\n        type: AppSettingsActionTypes.MUTE_APP,\n    }\n}\n\nexport const condenseApp = () => {\n    return {\n        type: AppSettingsActionTypes.CONDENSE_APP,\n    }\n}\n\nexport const colorizeApp = (indexGradient) => {\n    return {\n        type: AppSettingsActionTypes.COLORIZE_APP,\n        indexGradient,\n    }\n}","import * as ElementActionTypes from '../constants/ElementActionTypes';\n\nexport const addElement = (element) => {\n    return {\n        type: ElementActionTypes.ADD_ELEMENT,\n        element,\n    }\n}\n\nexport const deleteElement = (indexElement) => {\n    return {\n        type: ElementActionTypes.DELETE_ELEMENT,\n        indexElement,\n    }\n}\n\nexport const displayElementSettings = (indexElement, propertyName, newValue) => {\n    return {\n        type: ElementActionTypes.DISPLAY_ELEMENT_SETTINGS,\n        indexElement, \n        propertyName, \n        newValue\n    }\n}\n\nexport const displayElementInFullScreen = (newElements) => {\n    return {\n        type: ElementActionTypes.DISPLAY_ELEMENT_IN_FULL_SCREEN,\n        newElements\n    }\n}\n\nexport const resetElementCount = (newElements) => {\n    return {\n        type: ElementActionTypes.RESET_ELEMENT_COUNT,\n        newElements\n    }\n}\n\nexport const renameElement = (indexElement, propertyName, newValue, dateReadableFr) => {\n    return {\n        type: ElementActionTypes.RENAME_ELEMENT,\n        indexElement,\n        propertyName, \n        newValue, \n        dateReadableFr\n    }\n}\n\nexport const changeElementIncrementBy = (indexElement, propertyName, newValue) => {\n    return {\n        type: ElementActionTypes.CHANGE_ELEMENT_INCREMENT_BY,\n        indexElement,\n        propertyName, \n        newValue\n    }\n}\n\nexport const changeElementCount = (indexElement, propertyName, newValue) => {\n    return {\n        type: ElementActionTypes.CHANGE_ELEMENT_COUNT,\n        indexElement,\n        propertyName, \n        newValue\n    }\n}\n\nexport const changeElementCountHistory = (elements, indexElement, propertyName, newValue, addToList) => {\n    return {\n        type: ElementActionTypes.CHANGE_ELEMENT_COUNT_HISTORY,\n        elements,\n        indexElement,\n        propertyName, \n        newValue,\n        addToList,\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport './scss/app.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App /> \n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}